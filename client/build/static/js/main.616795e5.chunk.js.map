{"version":3,"sources":["actions.js","reducers.js","config/configureStore.js","components/Register.js","containers/RegisterContainer.js","components/Login.js","containers/LoginContainer.js","components/CardDescriptionForm.js","components/CardDescriptionDisplay.js","components/CardTitleForm.js","components/CardTitleDisplay.js","components/ChecklistItemForm.js","components/ChecklistTitleForm.js","components/ChecklistTitleDisplay.js","components/Checklist.js","components/CardModal.js","components/CardMemberList.js","components/Card.js","containers/CardContainer.js","components/CardForm.js","components/List.js","containers/ListContainer.js","components/Board.js","containers/BoardContainer.js","components/Show.js","containers/ShowContainer.js","components/Home.js","App.js","components/withAuth.js","index.js"],"names":["require","getDataFailure","error","type","handleUsernameInputChange","data","handlePasswordInputChange","updateCurrentUser","changeActiveCardModal","id","updateActiveBoardLists","lists","handleSubmit","e","route","dispatch","getState","preventDefault","state","username","password","console","log","JSON","stringify","fetch","method","body","headers","then","res","status","json","Error","catch","err","alert","changeName","componentName","listId","target","parentElement","document","getElementById","innerHTML","value","currentUser","user","addMemberToCard","memberUsername","memberToAdd","cardId","firstChild","boardId","activeBoard","onDragEnd","result","Array","from","activeBoardLists","sourceListIndex","destinationListIndex","sourceList","destinationList","draggedCard","destination","source","draggableId","Promise","resolve","filter","list","droppableId","_id","forEach","index","cards","card","draoppableId","stateLists","splice","changeActiveBoardLists","initialState","isLoggingIn","currentBoard","userBoards","redirect","showCardForm","cardTitle","cardDescription","activeCardModal","cardAttributeContent","showBoardNameDisplay","showCardDescriptionForm","showCardTitleForm","attributeType","isLoading","userList","showDuplicateMemberWarning","currentList","currentCard","progressValue","showChecklistItemForm","showChecklistTitleForm","showAddMemberDropdown","showMemberListDropdown","checklistItem","persistConfig","key","storage","stateReconciler","autoMergeLevel2","blacklist","persistedReducer","persistReducer","action","boards","title","attribute","description","users","member","listAndCard","checklistId","item","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","Register","onSubmit","onUsernameChange","onPasswordChange","className","name","placeholder","onChange","to","RegisterContainer","this","props","Component","connect","Login","LoginContainer","CardDescriptionForm","handleEditCardDescription","handleUpdateCardDescription","handleSwitchToCardDescriptionDisplay","defaultValue","onClick","CardDescriptionDisplay","handleSwitchToCardDescriptionForm","CardTitleForm","handleEditCardTitle","handleUpdateCardTitle","handleSwitchToCardTitleDisplay","CardTitleDisplay","handleSwitchToCardTitleForm","ChecklistItemForm","handleEditChecklistItemForm","handleHideAddItemForm","handleAddChecklistItem","ChecklistTitleForm","handleCardAttributeEdit","handleHideChecklistTitleForm","handleUpdateChecklistTitle","ChecklistTitleDisplay","handleDisplayChecklistTitleForm","handleDeleteChecklist","Checklist","itemForm","checklistTitleComponent","items","handleCheckItem","handleShowAddItemForm","listItems","map","labelClasses","checked","content","for","checkedItemLength","length","class","max","CardModal","attributeContent","members","classes","handleActiveCardModal","handleDeleteCard","listName","handleAddMemberToCard","handleSelectMemberFromDropdown","handleCloseDuplicateMemberWarning","handleDeleteMemberFromCard","handleCreateChecklist","handleOpenAddMemberDropdown","handleActivateMemberListDropdown","cardActivity","descriptionForm","descriptionDisplay","titleForm","titleDisplay","descriptionComponent","titleComponent","addedMembersList","checklists","memberList","board","activity","checklist","href","checklistsHeading","notificationClasses","memberDropdownClasses","aria-label","aria-haspopup","aria-controls","role","CardMemberList","Card","membersList","listCard","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","data-target","CardContainer","ShowMemberListDropdown","ownProps","boardList","deleteCard","updateCardTitle","updateCardDescription","editCardTitle","editCardDescription","selectMemberFromDropdown","previousSibling","deleteMemberFromCard","showAddItemForm","createChecklist","checklistItemContent","addChecklistItem","checklistItemId","checkChecklistItem","displayChecklistTitleForm","updateChecklistTitle","deleteChecklist","editChecklistItemForm","CardForm","handleSaveCard","handleHideCardForm","handleTitleChange","List","deleteList","handleListNameChange","handleShowCardForm","cardComponents","cardForm","droppableProps","isDraggingOver","onBlur","ListContainer","createCardForm","saveCard","changeTitle","Board","boardLists","handleClick","handleBoardNameChange","handleHideBoardNameDisplay","handleOnDragEnd","boardNameDisplayClasses","boardNameInputClasses","BoardContainer","Show","handleLogoutClick","handleCreateBoard","handleDeleteBoard","handleActiveBoardSwitch","dropdownItems","boardNames","push","i","aria-hidden","ShowContainer","switchActiveBoard","Home","App","path","exact","component","ComponentToProtect","loading","setState","ReactDOM","render"],"mappings":"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","file":"static/js/main.616795e5.chunk.js","sourcesContent":["import { get } from 'mongoose'\nvar _ = require('lodash')\n\nexport const GET_DATA_REQUEST = 'GET_DATA_REQUEST'\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\nexport const GET_DATA_FAILURE = 'GET_DATA_FAILURE'\n\nexport const HANDLE_USERNAME_INPUT_CHANGE = 'HANDLE_USERNAME_INPUT_CHANGE'\nexport const HANDLE_PASSWORD_INPUT_CHANGE = 'HANDLE_PASSWORD_INPUT_CHANGE'\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD'\nexport const UPDATE_CURRENT_USER = 'UPDATE_CURRENT_USER'\nexport const CHANGE_BOARD_NAME = 'CHANGE_BOARD_NAME'\nexport const CREATE_CARD_FORM = 'CREAT_CARD_FORM'\nexport const HIDE_CARD_FORM = 'HIDE_CARD_FORM'\nexport const CHANGE_TITLE = 'CHANGE_TITLE'\nexport const CHANGE_ACTIVE_CARD_MODAL = 'CHANGE_ACTIVE_CARD_MODAL'\nexport const EDIT_CARD_TITLE = 'EDIT_CARD_TITLE'\nexport const EDIT_CARD_DESCRIPTION = 'EDIT_CARD_DESCRIPTION'\nexport const CHANGE_SHOW_BOARD_NAME_DISPLAY = 'SHOW_BOARD_NAME_DISPLAY'\nexport const SWITCH_TO_CARD_DESCRIPTION_FORM = 'SWITCH_TO_CARD_DESCRIPTION_FORM'\nexport const SWITCH_TO_CARD_DESCRIPTION_DISPLAY =\n  'SWITCH_TO_CARD_DESCRIPTION_DISPLAY'\nexport const SWITCH_TO_CARD_TITLE_FORM = 'SWITCH_TO_CARD_TITLE_FORM'\nexport const SWITCH_TO_CARD_TITLE_DISPLAY = 'SWITCH_TO_CARD_TITLE_DISPLAY'\nexport const TOGGLE_IS_LOADING = 'TOGGLE_IS_LOADING'\nexport const REDIRECT_AFTER_LOGOUT = 'REDIRECT_AFTER_LOGOUT'\nexport const UPDATE_USER_LIST = 'UPDATE_USER_LIST'\nexport const SELECT_MEMBER_FROM_DROPDOWN = 'SELECT_MEMBER_FROM_DROPDOWN'\nexport const DISPLAY_DUPLICATE_MEMBER_WARNING =\n  'DISPLAY_DUPLICATE_MEMBER_WARNING'\nexport const CLOSE_DUPLICATE_MEMBER_WARNING = 'CLOSE_DUPLICATE_MEMBER_WARNING'\nexport const UPDATE_ACTIVE_BOARD_LISTS = 'UPDATE_ACTIVE_BOARD_LISTS'\nexport const SET_CURRENT_LIST_AND_CARD = 'SET_CURRENT_LIST_AND_CARD'\nexport const SHOW_ADD_ITEM_FORM = 'SHOW_ADD_ITEM_FORM'\nexport const HIDE_ADD_ITEM_FORM = 'HIDE_ADD_ITEM_FORM'\nexport const DISPLAY_CHECKLIST_TITLE_FORM = 'DISPLAY_CHECKLIST_TITLE_FORM'\nexport const HIDE_CHECKLIST_TITLE_FORM = 'HIDE_CHECKLIST_TITLE_FORM'\nexport const OPEN_MEMBER_DROPDOWN = 'OPEN_MEMBER_DROPDOWN'\nexport const ACTIVATE_MEMBER_LIST_DROPDOWN = 'ACTIVATE_MEMBER_LIST_DROPDOWN'\nexport const EDIT_CHECKLIST_ITEM_FORM = 'EDIT_CHECKLIST_ITEM_FORM'\n\nexport function getDataRequest() {\n  return {\n    type: GET_DATA_REQUEST,\n  }\n}\n\nexport function getDataSuccess(data) {\n  return {\n    type: GET_DATA_SUCCESS,\n    data,\n  }\n}\n\nexport function getDataFailure(error) {\n  return {\n    type: GET_DATA_FAILURE,\n    error,\n  }\n}\n\nexport function handleUsernameInputChange(data) {\n  return {\n    type: HANDLE_USERNAME_INPUT_CHANGE,\n    data,\n  }\n}\n\nexport function handlePasswordInputChange(data) {\n  return {\n    type: HANDLE_PASSWORD_INPUT_CHANGE,\n    data,\n  }\n}\n\nexport function setCurrentBoard(data) {\n  return {\n    type: SET_CURRENT_BOARD,\n    data,\n  }\n}\n\nexport function updateCurrentUser(data) {\n  return {\n    type: UPDATE_CURRENT_USER,\n    data,\n  }\n}\n\nexport function createCardForm(listId) {\n  return {\n    type: CREATE_CARD_FORM,\n    listId,\n  }\n}\n\nexport function hideCardForm() {\n  return {\n    type: HIDE_CARD_FORM,\n  }\n}\n\nexport function changeTitle(title) {\n  return {\n    type: CHANGE_TITLE,\n    title,\n  }\n}\n\nexport function changeActiveCardModal(id) {\n  return {\n    type: CHANGE_ACTIVE_CARD_MODAL,\n    id,\n  }\n}\n\nexport function editCardTitle(title) {\n  return {\n    type: EDIT_CARD_TITLE,\n    title,\n  }\n}\n\nexport function editCardDescription(description) {\n  return {\n    type: EDIT_CARD_DESCRIPTION,\n    description,\n  }\n}\n\nexport function changeShowBoardNameDisplay() {\n  return {\n    type: CHANGE_SHOW_BOARD_NAME_DISPLAY,\n  }\n}\n\nexport function switchToCardDescriptionForm() {\n  return {\n    type: SWITCH_TO_CARD_DESCRIPTION_FORM,\n  }\n}\n\nexport function switchToCardDescriptionDisplay() {\n  return {\n    type: SWITCH_TO_CARD_DESCRIPTION_DISPLAY,\n  }\n}\n\nexport function switchToCardDTitleForm() {\n  return {\n    type: SWITCH_TO_CARD_TITLE_FORM,\n  }\n}\n\nexport function switchToCardTItleDisplay() {\n  return {\n    type: SWITCH_TO_CARD_TITLE_DISPLAY,\n  }\n}\n\nexport function toggleIsLoading() {\n  return {\n    type: TOGGLE_IS_LOADING,\n  }\n}\n\nexport function redirectAfterLogout() {\n  return {\n    type: REDIRECT_AFTER_LOGOUT,\n  }\n}\n\nexport function updateUserList(users) {\n  return {\n    type: UPDATE_USER_LIST,\n    users,\n  }\n}\n\nexport function selectMemberFromDropdown(member) {\n  return {\n    type: SELECT_MEMBER_FROM_DROPDOWN,\n    member,\n  }\n}\n\nexport function displayDuplicateMemberWarning() {\n  return {\n    type: DISPLAY_DUPLICATE_MEMBER_WARNING,\n  }\n}\n\nexport function closeDuplicateMemberWarning() {\n  return {\n    type: CLOSE_DUPLICATE_MEMBER_WARNING,\n  }\n}\n\nexport function updateActiveBoardLists(lists) {\n  return {\n    type: UPDATE_ACTIVE_BOARD_LISTS,\n    lists,\n  }\n}\n\nexport function setCurrentListAndCard(listAndCard) {\n  return {\n    type: SET_CURRENT_LIST_AND_CARD,\n    listAndCard,\n  }\n}\n\nexport function showAddItemForm(checklistId) {\n  return {\n    type: SHOW_ADD_ITEM_FORM,\n    checklistId,\n  }\n}\n\nexport function hideAddItemForm() {\n  return {\n    type: HIDE_ADD_ITEM_FORM,\n  }\n}\n\nexport function displayChecklistTitleForm(checklistId) {\n  return {\n    type: DISPLAY_CHECKLIST_TITLE_FORM,\n    checklistId,\n  }\n}\n\nexport function HideChecklistTitleForm() {\n  return {\n    type: HIDE_CHECKLIST_TITLE_FORM,\n  }\n}\n\nexport function openMemberDropdown() {\n  return {\n    type: OPEN_MEMBER_DROPDOWN,\n  }\n}\n\nexport function activateMemberListDropdown() {\n  return {\n    type: ACTIVATE_MEMBER_LIST_DROPDOWN,\n  }\n}\n\nexport function editChecklistItemForm(item) {\n  return {\n    type: EDIT_CHECKLIST_ITEM_FORM,\n    item,\n  }\n}\n\n//handles register and login\nexport function handleSubmit(e, route) {\n  return (dispatch, getState) => {\n    e.preventDefault()\n    let state = getState()\n    let username = state.username\n    let password = state.password\n    console.log(JSON.stringify({ username: username, password: password }))\n\n    fetch(route, {\n      method: 'POST',\n      body: JSON.stringify({ username: username, password: password }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        if (res.status === 200) {\n          console.log('Yay!')\n          return res.json()\n          //this.props.history.push('/')\n        } else {\n          console.log('no')\n          const error = new Error(res.error)\n          throw error\n        }\n      })\n      .then(json => {\n        console.log('submit ' + JSON.stringify(json))\n        dispatch(getDataSuccess(json))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('Error logging in')\n      })\n  }\n}\n\nexport function handleLogOut(e) {\n  return dispatch => {\n    fetch('/logout', {\n      method: 'POST',\n    })\n      .then(() => dispatch(redirectAfterLogout()))\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('Error logging out')\n      })\n  }\n}\n\nexport function createBoard(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    fetch('/createBoard', {\n      method: 'POST',\n      body: JSON.stringify({ currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log(res)\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        alert(err)\n      })\n  }\n}\n\nexport function createList(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    console.log('state ' + JSON.stringify(state))\n\n    fetch('/createList', {\n      method: 'POST',\n      body: JSON.stringify({ activeBoard: state.currentUser.activeBoard }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log('json ' + JSON.stringify(res))\n        return res.json()\n      })\n      .then(json => {\n        console.log('json ' + JSON.stringify(json))\n        //console.log('create list ' + JSON.stringify(json))\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteList(e) {\n  return dispatch => {\n    let listId = e.target.parentElement.id\n    fetch('/deleteList', {\n      method: 'DELETE',\n      body: JSON.stringify({ listId }),\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log(JSON.stringify(res))\n        return res.json()\n      })\n      .then(json => {\n        console.log(json)\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteBoard(e) {\n  return (dispatch, getState) => {\n    console.log('butts')\n    let state = getState()\n    let id = state.currentUser.activeBoard\n    fetch('/deleteBoard', {\n      method: 'DELETE',\n      body: JSON.stringify({ board: id }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        console.log('current User ' + JSON.stringify(json))\n        dispatch(updateCurrentUser(json))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function changeName(e, componentName, route) {\n  return (dispatch, getState) => {\n    let listId\n    if (route === '/changeListName') {\n      listId = e.target.parentElement.parentElement.id\n    }\n    if (route === '/changeBoardName') {\n      document.getElementById('board-name').innerHTML = ''\n      e.target.value = ''\n    }\n    let state = getState()\n    let currentUser = state.currentUser\n    console.log('route ' + route)\n    fetch(route, {\n      method: 'POST',\n      body: JSON.stringify({ componentName, currentUser, listId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        console.log('change name ' + JSON.stringify(json))\n        if (route === '/changeListName') {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n        } else {\n          dispatch(updateCurrentUser(json.user))\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function saveCard(e) {\n  return (dispatch, getState) => {\n    e.preventDefault()\n    dispatch(hideCardForm())\n    let state = getState()\n    let currentUser = state.currentUser\n    let listId = e.target.parentElement.id\n    console.log('list yo ' + listId)\n    let title = state.cardTitle\n    fetch('/createCard', {\n      method: 'POST',\n      body: JSON.stringify({ listId, currentUser, title }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        if (json.error) {\n          alert(JSON.stringify(json.error))\n        } else {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteCard(cardId, listId) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    fetch('deleteCard', {\n      method: 'DELETE',\n      body: JSON.stringify({ cardId, listId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function switchActiveBoard(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let boardId = e.target.id\n    console.log('boardId ' + boardId)\n    fetch('switchActiveBoard', {\n      method: 'PATCH',\n      body: JSON.stringify({ boardId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function updateCardTitle(e, listId, cardId) {\n  return (dispatch, getState) => {\n    dispatch(toggleIsLoading())\n\n    let state = getState()\n    console.log(state.cardTitle)\n    //let attributeType = state.attributeType\n    let cardTitle = state.cardTitle\n    let currentUser = state.currentUser\n    dispatch(switchToCardTItleDisplay())\n\n    fetch('/updateCardTitle', {\n      method: 'POST',\n      body: JSON.stringify({\n        cardTitle,\n        currentUser,\n        listId,\n        cardId,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function updateCardDescription(e) {\n  return (dispatch, getState) => {\n    dispatch(toggleIsLoading())\n    dispatch(switchToCardDescriptionDisplay())\n    let state = getState()\n    //let attributeType = state.attributeType\n    let cardDescription = state.cardDescription\n    let currentUser = state.currentUser\n    let cardId = e.target.parentElement.parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.firstChild.id\n\n    fetch('/updateCardDescription', {\n      method: 'POST',\n      body: JSON.stringify({\n        cardDescription,\n        currentUser,\n        listId,\n        cardId,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function addMemberToCard(e) {\n  return (dispatch, getState) => {\n    dispatch(toggleIsLoading())\n    let state = getState()\n    //let attributeType = state.attributeType\n    let memberUsername = state.memberToAdd\n    let currentUser = state.currentUser\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.parentElement.firstChild.id\n\n    fetch('/addMemberToCard', {\n      method: 'POST',\n      body: JSON.stringify({\n        memberUsername,\n        currentUser,\n        listId,\n        cardId,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log('res ' + JSON.stringify(res))\n        if (res.status === 500) {\n          return res\n        } else {\n          return res.json()\n        }\n      })\n      .then(json => {\n        if (json.status === 500) {\n          dispatch(displayDuplicateMemberWarning())\n        } else {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n          dispatch(addBoardToMember())\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function getAllUsers() {\n  return dispatch => {\n    fetch('/getAllUsers')\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateUserList(json))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function addBoardToMember() {\n  return (dispatch, getState) => {\n    let state = getState()\n    console.log('state' + JSON.stringify(state))\n    let username = state.memberToAdd\n    let boardId = state.currentUser.activeBoard\n    fetch('/addBoardToMember', {\n      method: 'POST',\n      body: JSON.stringify({ username, boardId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    }).catch(err => {\n      console.log(err)\n      alert('hmmmm')\n    })\n  }\n}\n\nexport function deleteMemberFromCard(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.firstChild.id\n    let username = e.target.previousSibling.innerHTML\n\n    console.log('username ' + username)\n\n    fetch('/deleteMemberFromCard', {\n      method: 'DELETE',\n      body: JSON.stringify({ username, cardId, listId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function changeActiveBoardLists(\n  source,\n  destination,\n  draggableId,\n  stateLists,\n  sourceList,\n  destinationList,\n  draggedCard,\n  sourceListIndex,\n  destinationListIndex,\n) {\n  return dispatch => {\n    let lists = stateLists\n\n    if (\n      JSON.stringify(sourceList._id) === JSON.stringify(destinationList._id)\n    ) {\n      sourceList.cards.splice(source.index, 1)\n\n      sourceList.cards.splice(destination.index, 0, draggedCard)\n\n      lists.splice(sourceListIndex, 1, sourceList)\n      dispatch(updateActiveBoardLists(lists))\n    } else {\n      sourceList.cards.splice(source.index, 1)\n      destinationList.cards.splice(destination.index, 0, draggedCard)\n      lists.splice(sourceListIndex, 1, sourceList)\n\n      lists.splice(destinationListIndex, 1, destinationList)\n\n      dispatch(updateActiveBoardLists(lists))\n    }\n  }\n}\n\nexport function onDragEnd(result) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let lists = Array.from(state.activeBoardLists)\n    console.log(lists)\n    let currentUser = state.currentUser\n\n    const { destination, source, draggableId } = result\n\n    let sourceListIndex\n    let destinationListIndex\n    let sourceList\n    let destinationList\n    let draggedCard\n\n    Promise.resolve(\n      (sourceList = lists.filter(list => {\n        return JSON.stringify(source.droppableId) === JSON.stringify(list._id)\n      })[0]),\n      lists.forEach((list, index) => {\n        if (JSON.stringify(list._id) === JSON.stringify(source.droppableId)) {\n          sourceListIndex = index\n        }\n      }),\n      (destinationList = lists.filter(list => {\n        return (\n          JSON.stringify(destination.droppableId) === JSON.stringify(list._id)\n        )\n      })[0]),\n      lists.forEach((list, index) => {\n        if (\n          JSON.stringify(list._id) === JSON.stringify(destination.droppableId)\n        ) {\n          destinationListIndex = index\n        }\n      }),\n      (draggedCard = sourceList.cards.filter(card => {\n        return JSON.stringify(card._id) === JSON.stringify(draggableId)\n      })[0]),\n    ).then(() => {\n      console.log(draggableId)\n      console.log('source ' + JSON.stringify(source))\n      console.log('destination ' + JSON.stringify(destination))\n\n      if (!destination) {\n        return\n      }\n\n      if (\n        destination.draoppableId === source.droppableId &&\n        destination.index === source.index\n      ) {\n        return\n      }\n\n      dispatch(\n        changeActiveBoardLists(\n          source,\n          destination,\n          draggableId,\n          lists,\n          sourceList,\n          destinationList,\n          draggedCard,\n          sourceListIndex,\n          destinationListIndex,\n        ),\n      )\n    })\n\n    fetch('/updateListAfterDnD', {\n      method: 'POST',\n      body: JSON.stringify({\n        currentUser,\n        destination,\n        source,\n        draggableId,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateCurrentUser(json))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function createChecklist(cardId, listId) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    // let cardId =\n    //   e.target.parentElement.parentElement.parentElement.parentElement.id\n    // let listId =\n    //   e.target.parentElement.parentElement.parentElement.parentElement\n    //     .firstChild.id\n\n    console.log(cardId)\n\n    fetch('/createChecklist', {\n      method: 'POST',\n      body: JSON.stringify({ cardId, listId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function addChecklistItem(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistId = e.target.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .firstChild.id\n    let checklistItemContent = state.checklistItem\n\n    fetch('./addChecklistItem', {\n      method: 'POST',\n      body: JSON.stringify({\n        currentUser,\n        checklistId,\n        cardId,\n        listId,\n        checklistItemContent,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function checkChecklistItem(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistItemId = e.target.parentElement.id\n    let checklistId = e.target.parentElement.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.firstChild.id\n    let attributeType = state.attributeType\n    let cardAttributeContent = state.cardAttributeContent\n\n    fetch('/checkChecklistItem', {\n      method: 'PATCH',\n      body: JSON.stringify({\n        currentUser,\n        checklistItemId,\n        checklistId,\n        cardId,\n        listId,\n        attributeType,\n        cardAttributeContent,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function updateChecklistTitle(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistId = e.target.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .firstChild.id\n    let title = state.cardAttributeContent\n\n    fetch('/updateChecklistTitle', {\n      method: 'PATCH',\n      body: JSON.stringify({ checklistId, currentUser, title, cardId, listId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteChecklist(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistId = e.target.parentElement.parentElement.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.firstChild.id\n\n    fetch('/deleteChecklist', {\n      method: 'DELETE',\n      body: JSON.stringify({ checklistId, currentUser, cardId, listId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n","import * as Actions from './actions'\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoggingIn: false,\n  currentUser: {},\n  currentBoard: {},\n  userBoards: [],\n  error: '',\n  redirect: '',\n  showCardForm: false,\n  cardTitle: '',\n  cardDescription: '',\n  memberToAdd: '',\n  activeCardModal: null,\n  cardAttributeContent: '',\n  showBoardNameDisplay: true,\n  showCardDescriptionForm: false,\n  showCardTitleForm: false,\n  attributeType: '',\n  isLoading: false,\n  userList: [],\n  showDuplicateMemberWarning: false,\n  activeBoardLists: [],\n  currentList: {},\n  currentCard: {},\n  progressValue: 0,\n  showChecklistItemForm: false,\n  showChecklistTitleForm: false,\n  showAddMemberDropdown: false,\n  showMemberListDropdown: false,\n  checklistItem: '',\n}\n\nexport function djello(state = initialState, action) {\n  switch (action.type) {\n    case Actions.GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoggingIn: true,\n      }\n    case Actions.GET_DATA_SUCCESS:\n      console.log('reducer ' + JSON.stringify(action.data.user.activeBoard))\n      return {\n        ...state,\n        isLoggingIn: false,\n        currentUser: action.data.user,\n        redirect: action.data.redirect,\n        userBoards: action.data.boards,\n        currentBoard: action.data.user.activeBoard,\n        activeBoardLists: action.data.lists,\n      }\n    case Actions.GET_DATA_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        error: action.error,\n      }\n    case Actions.HANDLE_USERNAME_INPUT_CHANGE:\n      return {\n        ...state,\n        username: action.data,\n      }\n    case Actions.HANDLE_PASSWORD_INPUT_CHANGE:\n      return {\n        ...state,\n        password: action.data,\n      }\n    case Actions.SET_CURRENT_BOARD:\n      console.log(action.data)\n      return {\n        ...state,\n        currentBoard: action.data,\n      }\n    case Actions.UPDATE_CURRENT_USER:\n      console.log('current user ' + action.data)\n      return {\n        ...state,\n        currentUser: action.data,\n        isLoading: false,\n      }\n    case Actions.CREATE_CARD_FORM:\n      return {\n        ...state,\n        showCardForm: action.listId,\n        cardTitle: '',\n      }\n    case Actions.HIDE_CARD_FORM:\n      return {\n        ...state,\n        showCardForm: false,\n      }\n    case Actions.CHANGE_TITLE:\n      return {\n        ...state,\n        cardTitle: action.title,\n      }\n    case Actions.CHANGE_ACTIVE_CARD_MODAL:\n      return {\n        ...state,\n        activeCardModal: state.activeCardModal ? null : action.id,\n      }\n    case Actions.EDIT_CARD_TITLE:\n      console.log('decription ' + action.attribute)\n      return {\n        ...state,\n        cardTitle: action.title,\n      }\n    case Actions.EDIT_CARD_DESCRIPTION:\n      return {\n        ...state,\n        cardDescription: action.description,\n      }\n    case Actions.CHANGE_SHOW_BOARD_NAME_DISPLAY:\n      return {\n        ...state,\n        showBoardNameDisplay: state.showBoardNameDisplay ? false : true,\n      }\n    case Actions.SWITCH_TO_CARD_DESCRIPTION_FORM:\n      return {\n        ...state,\n        showCardDescriptionForm: true,\n        cardDescription: '',\n      }\n    case Actions.SWITCH_TO_CARD_DESCRIPTION_DISPLAY:\n      return {\n        ...state,\n        showCardDescriptionForm: false,\n      }\n    case Actions.SWITCH_TO_CARD_TITLE_FORM:\n      return {\n        ...state,\n        showCardTitleForm: true,\n        attributeType: 'title',\n      }\n    case Actions.SWITCH_TO_CARD_TITLE_DISPLAY:\n      return {\n        ...state,\n        showCardTitleForm: false,\n      }\n    case Actions.TOGGLE_IS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case Actions.REDIRECT_AFTER_LOGOUT:\n      return {\n        ...state,\n        redirect: '/login',\n      }\n    case Actions.UPDATE_USER_LIST:\n      return {\n        ...state,\n        userList: action.users,\n      }\n    case Actions.SELECT_MEMBER_FROM_DROPDOWN:\n      return {\n        ...state,\n        memberToAdd: action.member,\n      }\n    case Actions.DISPLAY_DUPLICATE_MEMBER_WARNING:\n      return {\n        ...state,\n        showDuplicateMemberWarning: true,\n      }\n    case Actions.CLOSE_DUPLICATE_MEMBER_WARNING:\n      return {\n        ...state,\n        showDuplicateMemberWarning: false,\n      }\n    case Actions.UPDATE_ACTIVE_BOARD_LISTS:\n      console.log('lists ' + JSON.stringify(action.lists))\n      return {\n        ...state,\n        activeBoardLists: action.lists,\n      }\n    case Actions.SET_CURRENT_LIST_AND_CARD:\n      return {\n        ...state,\n        currentList: action.listAndCard.currentList,\n        currentCard: action.listAndCard.currentCard,\n      }\n    case Actions.SHOW_ADD_ITEM_FORM:\n      return {\n        ...state,\n        showChecklistItemForm: action.checklistId,\n        attributeType: 'checklist-item',\n      }\n    case Actions.HIDE_ADD_ITEM_FORM:\n      return {\n        ...state,\n        showChecklistItemForm: false,\n      }\n    case Actions.DISPLAY_CHECKLIST_TITLE_FORM:\n      return {\n        ...state,\n        showChecklistTitleForm: action.checklistId,\n        attributeType: 'title',\n      }\n    case Actions.HIDE_CHECKLIST_TITLE_FORM:\n      return {\n        ...state,\n        showChecklistTitleForm: false,\n      }\n    case Actions.OPEN_MEMBER_DROPDOWN:\n      return {\n        ...state,\n        showAddMemberDropdown: state.showAddMemberDropdown ? false : true,\n      }\n    case Actions.ACTIVATE_MEMBER_LIST_DROPDOWN:\n      return {\n        ...state,\n        showMemberListDropdown: state.showMemberListDropdown ? false : true,\n      }\n    case Actions.EDIT_CHECKLIST_ITEM_FORM:\n      return {\n        ...state,\n        checklistItem: action.item,\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\n\nimport { djello } from '../reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  blacklist: [\n    'redirect',\n    'loading',\n    'showCardForm',\n    'activeCardModal',\n    'showCardDescriptionForm',\n  ],\n}\n\nconst persistedReducer = persistReducer(persistConfig, djello)\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport let store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n)\nexport let persistor = persistStore(store)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Register = ({ onSubmit, onUsernameChange, onPasswordChange }) => {\n  return (\n    <div className=\"tile is-ancestor is-4\" id=\"register\">\n      <div className=\"card is-4 form-card has-background-grey-lighter\">\n        <div className=\"form-header is-size-4\">Create a New Account</div>\n        <form onSubmit={onSubmit} className=\"card-content\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"username\"\n                type=\"email\"\n                placeholder=\"email\"\n                onChange={onUsernameChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-footer\">\n            Already have an account? <Link to=\"/login\">Log In here!</Link>\n          </div>\n\n          <div className=\"control\">\n            <button className=\"button is-primary is-light is-fullwidth\">\n              Sign Up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Register from '../components/Register'\nimport {\n  handleUsernameInputChange,\n  handlePasswordInputChange,\n  handleSubmit,\n} from '../actions'\nimport { Redirect } from 'react-router-dom'\n\nclass RegisterContainer extends Component {\n  render() {\n    const {\n      onUsernameChange,\n      onPasswordChange,\n      onSubmit,\n      redirect,\n      currentUser,\n    } = this.props\n    if (redirect === `/${currentUser.username}`) {\n      return <Redirect to={`/${currentUser.username}`} />\n    }\n    return (\n      <Register\n        onUsernameChange={onUsernameChange}\n        onPasswordChange={onPasswordChange}\n        onSubmit={onSubmit}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.redirect,\n    currentUser: state.currentUser,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUsernameChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handleUsernameInputChange(data))\n    },\n\n    onPasswordChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handlePasswordInputChange(data))\n    },\n\n    onSubmit: e => {\n      dispatch(handleSubmit(e, '/register'))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Login = ({ onSubmit, onUsernameChange, onPasswordChange, redirect }) => {\n  return (\n    <div className=\"tile is-ancestor is-4\" id=\"login\">\n      <div className=\"card is-4 form-card has-background-grey-lighter\">\n        <div className=\"form-header is-size-4\">Sign In</div>\n        <form onSubmit={onSubmit} className=\"card-content\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"username\"\n                type=\"email\"\n                placeholder=\"email\"\n                onChange={onUsernameChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-footer\">\n            Don't have an account yet? <Link to=\"/register\">Register</Link> now.\n          </div>\n\n          <div className=\"control\">\n            <button className=\"button is-primary is-light is-fullwidth\">\n              Sign In\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Login from '../components/Login'\nimport {\n  handleUsernameInputChange,\n  handlePasswordInputChange,\n  handleSubmit,\n} from '../actions'\nimport { Redirect } from 'react-router-dom'\n\nclass LoginContainer extends Component {\n  render() {\n    const {\n      onUsernameChange,\n      onPasswordChange,\n      onSubmit,\n      redirect,\n      currentUser,\n    } = this.props\n\n    console.log(redirect)\n\n    if (redirect === `/${currentUser.username}`) {\n      return <Redirect to={`/${currentUser.username}`} />\n    }\n    return (\n      <Login\n        onUsernameChange={onUsernameChange}\n        onPasswordChange={onPasswordChange}\n        onSubmit={onSubmit}\n        redirect={redirect}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.redirect,\n    currentUser: state.currentUser,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUsernameChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handleUsernameInputChange(data))\n    },\n\n    onPasswordChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handlePasswordInputChange(data))\n    },\n\n    onSubmit: e => {\n      dispatch(handleSubmit(e, '/login'))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\n","import React from 'react'\n\nconst CardDescriptionForm = ({\n  description,\n  handleEditCardDescription,\n  handleUpdateCardDescription,\n  handleSwitchToCardDescriptionDisplay,\n  listId,\n  cardId,\n}) => {\n  return (\n    <form\n      className=\"card-description-form\"\n      onSubmit={handleUpdateCardDescription}\n    >\n      <textarea\n        className=\"textarea\"\n        onChange={handleEditCardDescription}\n        defaultValue={description}\n      ></textarea>\n      <div id=\"card-modal-buttons\" className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" type=\"submit\">\n            Save\n          </button>\n          <button\n            className=\"button is-danger\"\n            onClick={handleSwitchToCardDescriptionDisplay}\n          >\n            Cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CardDescriptionForm\n","import React from 'react'\n\nconst CardDescriptionDisplay = ({\n  description,\n  handleSwitchToCardDescriptionForm,\n}) => {\n  return (\n    <div\n      className=\"card card-description-display\"\n      onClick={handleSwitchToCardDescriptionForm}\n    >\n      <div className=\"card-content\">{description}</div>\n    </div>\n  )\n}\n\nexport default CardDescriptionDisplay\n","import React from 'react'\n\nconst CardTitleForm = ({\n  title,\n  handleEditCardTitle,\n  handleUpdateCardTitle,\n  handleSwitchToCardTitleDisplay,\n  listId,\n  cardId,\n}) => {\n  return (\n    <form onSubmit={handleUpdateCardTitle}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        onChange={handleEditCardTitle}\n        defaultValue={title}\n      ></input>\n      <div id=\"card-modal-buttons\" className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" type=\"submit\">\n            Save\n          </button>\n          <button\n            className=\"button is-danger\"\n            onClick={handleSwitchToCardTitleDisplay}\n          >\n            Cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CardTitleForm\n","import React from 'react'\n\nconst CardTitleDisplay = ({ title, handleSwitchToCardTitleForm }) => {\n  return (\n    <div className=\"card-title-display\" onClick={handleSwitchToCardTitleForm}>\n      {title}\n    </div>\n  )\n}\n\nexport default CardTitleDisplay\n","import React from 'react'\n\nconst ChecklistItemForm = ({\n  handleEditChecklistItemForm,\n  handleHideAddItemForm,\n  handleAddChecklistItem,\n}) => {\n  return (\n    <form className=\"checklist-item-form\" onSubmit={handleAddChecklistItem}>\n      <div>\n        <a\n          className=\"hide-add-item-form delete is-medium\"\n          onClick={handleHideAddItemForm}\n        ></a>\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={handleEditChecklistItemForm}\n        />\n      </div>\n      <button className=\"button\" type=\"submit\">\n        Add\n      </button>\n    </form>\n  )\n}\n\nexport default ChecklistItemForm\n","import React from 'react'\n\nconst ChecklistTitleForm = ({\n  title,\n  handleCardAttributeEdit,\n  handleHideChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  checklistId,\n  listId,\n  cardId,\n}) => {\n  return (\n    <form onSubmit={handleUpdateChecklistTitle}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        onChange={handleCardAttributeEdit}\n        defaultValue={title}\n      ></input>\n      <div id=\"checklist-title-buttons\" className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" type=\"submit\">\n            Save\n          </button>\n          <button\n            className=\"button is-danger\"\n            onClick={handleHideChecklistTitleForm}\n          >\n            Cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default ChecklistTitleForm\n","import React from 'react'\n\nconst ChecklistTitleDisplay = ({\n  title,\n  handleDisplayChecklistTitleForm,\n  handleDeleteChecklist,\n}) => {\n  return (\n    <div\n      className=\"checklist-title-display\"\n      onClick={handleDisplayChecklistTitleForm}\n    >\n      <p className=\"checklist-title\">{title}</p>\n      <div className=\"delete-checklist\">\n        <button\n          className=\"button is-small is-danger is-light\"\n          onClick={handleDeleteChecklist}\n        >\n          delete\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ChecklistTitleDisplay\n","import React from 'react'\nimport ChecklistItemForm from './ChecklistItemForm'\nimport ChecklistTitleForm from './ChecklistTitleForm'\nimport CheclistTitleDisplay from './ChecklistTitleDisplay'\n//import { showChecklistTitleForm } from '../actions'\nimport ChecklistTitleDisplay from './ChecklistTitleDisplay'\n\nconst Checklist = ({\n  items,\n  handleCheckItem,\n  handleShowAddItemForm,\n  handleHideAddItemForm,\n  showChecklistItemForm,\n  //handleCardAttributeEdit,\n  handleAddChecklistItem,\n  handleDisplayChecklistTitleForm,\n  handleHideChecklistTitleForm,\n  cardId,\n  checklistId,\n  title,\n  showChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  handleDeleteChecklist,\n  handleEditChecklistItemForm,\n}) => {\n  let listItems = items.map(item => {\n    let labelClasses = item.checked\n      ? 'checklist-item-label checked'\n      : 'checklist-item-label'\n    return (\n      <div className=\"checklistItem\" id={item._id}>\n        <input\n          type=\"checkbox\"\n          value={item.content}\n          name={item.content}\n          onClick={handleCheckItem}\n        />\n        <label className={labelClasses} for={item.content}>\n          {' '}\n          {item.content}\n        </label>\n      </div>\n    )\n  })\n\n  let checkedItemLength = items.filter(item => {\n    return item.checked\n  }).length\n\n  let progressValue =\n    (checkedItemLength / items.length) * 100\n      ? (checkedItemLength / items.length) * 100\n      : 0\n\n  console.log(checkedItemLength)\n\n  let itemForm\n  if (showChecklistItemForm === checklistId) {\n    itemForm = (\n      <ChecklistItemForm\n        handleHideAddItemForm={handleHideAddItemForm}\n        //handleCardAttributeEdit={handleCardAttributeEdit}\n        handleAddChecklistItem={handleAddChecklistItem}\n        handleEditChecklistItemForm={handleEditChecklistItemForm}\n      />\n    )\n  } else {\n    itemForm = (\n      <button className=\"button is-light\" onClick={handleShowAddItemForm}>\n        Add an item\n      </button>\n    )\n  }\n  let checklistTitleComponent\n\n  if (showChecklistTitleForm === checklistId) {\n    checklistTitleComponent = (\n      <ChecklistTitleForm\n        title={title}\n        //handleCardAttributeEdit={handleCardAttributeEdit}\n        handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n        handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n      />\n    )\n  } else {\n    checklistTitleComponent = (\n      <ChecklistTitleDisplay\n        title={title}\n        handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n        showChecklistTitleForm={showChecklistTitleForm}\n        handleDeleteChecklist={handleDeleteChecklist}\n      />\n    )\n  }\n  return (\n    <div id={checklistId} className=\"checklist content\">\n      {checklistTitleComponent}\n      <span>{progressValue}%</span>\n      <progress\n        class=\"progress is-primary is-small\"\n        value={progressValue}\n        max=\"100\"\n      >\n        {progressValue}%\n      </progress>\n      {listItems}\n\n      {itemForm}\n    </div>\n  )\n}\n\nexport default Checklist\n","import React from 'react'\nimport CardDescriptionForm from './CardDescriptionForm'\nimport CardDescriptionDisplay from './CardDescriptionDisplay'\nimport CardTitleForm from './CardTitleForm'\nimport CardTitleDisplay from './CardTitleDisplay'\nimport MemberSelectionDropdown from './MemberSelectionDropdown'\nimport Checklist from './Checklist'\n\nconst CardModal = ({\n  currentUser,\n  attributeContent,\n  members,\n  classes,\n  handleActiveCardModal,\n  cardId,\n  handleDeleteCard,\n  listId,\n  listName,\n  handleEditCardTitle,\n  handleEditCardDescription,\n  handleUpdateCardTitle,\n  handleUpdateCardDescription,\n  handleAddMemberToCard,\n  handleSwitchToCardDescriptionForm,\n  handleSwitchToCardDescriptionDisplay,\n  handleSwitchToCardTitleForm,\n  handleSwitchToCardTitleDisplay,\n  showCardDescriptionForm,\n  showCardTitleForm,\n  isLoading,\n  handleSelectMemberFromDropdown,\n  showDuplicateMemberWarning,\n  handleCloseDuplicateMemberWarning,\n  handleDeleteMemberFromCard,\n  lists,\n  currentList,\n  currentCard,\n  handleShowAddItemForm,\n  handleHideAddItemForm,\n  showChecklistItemForm,\n  handleCreateChecklist,\n  handleAddChecklistItem,\n  handleCheckItem,\n  handleDisplayChecklistTitleForm,\n  handleHideChecklistTitleForm,\n  showChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  handleDeleteChecklist,\n  handleOpenAddMemberDropdown,\n  showAddMemberDropdown,\n  handleActivateMemberListDropdown,\n  showMemberListDropdown,\n  handleEditChecklistItemForm,\n}) => {\n  console.log('listId ' + listId)\n  console.log('carId ' + cardId)\n  let currentBoard = currentUser.boards.filter(board => {\n    return JSON.stringify(board._id) === JSON.stringify(currentUser.activeBoard)\n  })[0]\n\n  console.log('currentBoard ' + JSON.stringify(currentBoard))\n\n  //let currentList\n  //let currentCard\n  let cardActivity\n  let descriptionForm\n  let descriptionDisplay\n  let titleForm\n  let titleDisplay\n  let descriptionComponent\n  let titleComponent\n  let addedMembersList\n  let checklists\n  let memberList\n\n  console.log(currentList)\n\n  // currentCard = currentList.cards.filter(listCard => {\n  //   return JSON.stringify(listCard._id) === JSON.stringify(cardId)\n  // })[0]\n\n  if (currentCard.activity) {\n    cardActivity = currentCard.activity.map(action => {\n      return <li key={action}>{action}</li>\n    })\n  }\n\n  if (currentCard.checklists) {\n    checklists = currentCard.checklists.map(checklist => {\n      return (\n        <Checklist\n          items={checklist.items}\n          handleShowAddItemForm={handleShowAddItemForm}\n          handleHideAddItemForm={handleHideAddItemForm}\n          showChecklistItemForm={showChecklistItemForm}\n          //handleCardAttributeEdit={handleCardAttributeEdit}\n          handleAddChecklistItem={handleAddChecklistItem}\n          handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n          handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n          cardId={cardId}\n          checklistId={checklist._id}\n          handleCheckItem={handleCheckItem}\n          title={checklist.title}\n          showChecklistTitleForm={showChecklistTitleForm}\n          handleCheckItem={handleCheckItem}\n          handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n          handleDeleteChecklist={handleDeleteChecklist}\n          handleEditChecklistItemForm={handleEditChecklistItemForm}\n        />\n      )\n    })\n  }\n  descriptionForm = (\n    <CardDescriptionForm\n      description={currentCard.description}\n      handleEditCardDescription={handleEditCardDescription}\n      handleUpdateCardDescription={handleUpdateCardDescription}\n      handleSwitchToCardDescriptionDisplay={\n        handleSwitchToCardDescriptionDisplay\n      }\n      listName={listId}\n      cardId={cardId}\n    />\n  )\n  descriptionDisplay = (\n    <CardDescriptionDisplay\n      description={isLoading ? attributeContent : currentCard.description}\n      handleSwitchToCardDescriptionForm={handleSwitchToCardDescriptionForm}\n    />\n  )\n  titleForm = (\n    <CardTitleForm\n      title={currentCard.title}\n      handleEditCardTitle={handleEditCardTitle}\n      handleUpdateCardTitle={handleUpdateCardTitle}\n      handleSwitchToCardTitleDisplay={handleSwitchToCardTitleDisplay}\n    />\n  )\n\n  titleDisplay = (\n    <CardTitleDisplay\n      title={isLoading ? attributeContent : currentCard.title}\n      handleSwitchToCardTitleForm={handleSwitchToCardTitleForm}\n    />\n  )\n\n  descriptionComponent = showCardDescriptionForm\n    ? descriptionForm\n    : descriptionDisplay\n\n  addedMembersList = currentCard.members.map(member => {\n    return (\n      <li className=\"member\" key={member}>\n        <div className=\"member-username\">{member}</div>\n        <a className=\"remove-link\" onClick={handleDeleteMemberFromCard}>\n          remove\n        </a>\n      </li>\n    )\n  })\n\n  if (members) {\n    memberList = members.map(member => {\n      return (\n        <a\n          href=\"#\"\n          className=\"dropdown-item\"\n          onClick={handleSelectMemberFromDropdown}\n          key={member._id}\n        >\n          {member.username}\n        </a>\n      )\n    })\n  }\n  titleComponent = showCardTitleForm ? titleForm : titleDisplay\n  //})\n\n  let notificationClasses = showDuplicateMemberWarning\n    ? 'notification is-danger is-light'\n    : 'notification is-danger is-light hidden'\n\n  let checklistsHeading\n  checklistsHeading =\n    currentCard.checklists.length > 0 ? (\n      <p className=\"is-size-4\">Checklists</p>\n    ) : null\n\n  let memberDropdown\n\n  console.log(showAddMemberDropdown)\n\n  let memberDropdownClasses = showAddMemberDropdown\n    ? 'dropdown member-dropdown is-right is-active'\n    : 'dropdown member-dropdown is-right'\n\n  return (\n    <div id={cardId} className={classes}>\n      <span id={listId}></span>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <div className=\"modal-card-head\">\n          <div className=\"modal-card-title\">\n            {titleComponent}\n            <p className=\"in-list is-size-6\">In list {listName}</p>\n          </div>\n\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={handleActiveCardModal}\n          ></button>\n        </div>\n\n        <div className=\"modal-card-body\">\n          <div className=\"actions\">\n            <p className=\"is-size-4\">Add</p>\n            <button\n              className=\"button is-fullwidth is-light\"\n              onClick={() => handleCreateChecklist(cardId, listId)}\n            >\n              <span className=\"icon action-button-icon is-small\">\n                <i class=\"far fa-check-square\"></i>\n              </span>\n              <span>Checklist</span>\n            </button>\n            <div class={memberDropdownClasses}>\n              <div\n                class=\"dropdown-trigger member-dropdown-trigger\"\n                onClick={handleOpenAddMemberDropdown}\n              >\n                <button\n                  className=\"button is-fullwidth is-light\"\n                  aria-haspopup=\"true\"\n                  aria-controls=\"dropdown-menu2\"\n                >\n                  <span className=\"icon action-button-icon is-small\">\n                    <i class=\"fas fa-user-plus\"></i>\n                  </span>\n                  <span>Member</span>\n                </button>\n              </div>\n              <div class=\"dropdown-menu\" id=\"dropdown-menu2\" role=\"menu\">\n                <div class=\"dropdown-content\">\n                  {memberList}\n                  {/* <div class=\"dropdown-item\"> */}\n                  {/* <MemberSelectionDropdown\n                    members={members}\n                    handleSelectMemberFromDropdown={\n                      handleSelectMemberFromDropdown\n                    }\n                    handleCardAttributeUpdate={handleCardAttributeUpdate}\n                    handleActivateMemberListDropdown={\n                      handleActivateMemberListDropdown\n                    }\n                    showMemberListDropdown={showMemberListDropdown}\n                  /> */}\n                  {/* </div> */}\n                </div>\n              </div>\n            </div>\n            <button className=\"button is-fullwidth is-light\">\n              <span className=\"icon action-button-icon is-small\">\n                <i class=\"fas fa-paperclip\"></i>\n              </span>\n              <span>Attachment</span>\n            </button>\n          </div>\n          <button\n            className=\"button is-link is-light is-outlined mark-as-complete\"\n            onClick={handleDeleteCard}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-check\"></i>\n            </span>\n            <span>Mark as Complete</span>\n          </button>\n          <p className=\"is-size-4\">Description</p>\n          {descriptionComponent}\n          {checklistsHeading}\n          {checklists}\n          <div className=\"members\">\n            <p className=\"is-size-4\">Members</p>\n            <div className={notificationClasses}>\n              <button\n                className=\"delete\"\n                onClick={handleCloseDuplicateMemberWarning}\n              ></button>\n              Member already added to card!\n            </div>\n            {/* <MemberSelectionDropdown\n              members={members}\n              handleSelectMemberFromDropdown={handleSelectMemberFromDropdown}\n              handleCardAttributeUpdate={handleCardAttributeUpdate}\n            /> */}\n          </div>\n          <div className=\"content addedMembersList-container\">\n            <ul className=\"addedMembersList\">{addedMembersList}</ul>\n          </div>\n          <div className=\"modal-card-footer\">\n            <p className=\"is-size-4\">Activity</p>\n            <div className=\"content\">\n              <ul>{cardActivity}</ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardModal\n","import React from 'react'\n\nconst CardMemberList = ({ members }) => {\n  return (\n    <div className=\"dropdown is-hoverable\">\n      <div className=\"dropdown-trigger\">\n        <span\n          className=\"tag is-link is-light\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n        >\n          Members\n        </span>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {members.length > 0 ? members : 'no members yet'}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardMemberList\n","import React from 'react'\nimport CardModal from './CardModal'\nimport CardMemberList from './CardMemberList'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { is } from 'bluebird'\n\nconst Card = ({\n  currentUser,\n  attributeContent,\n  activeCardModal,\n  handleActiveCardModal,\n  cardId,\n  handleDeleteCard,\n  listId,\n  listName,\n  handleEditCardTitle,\n  handleEditCardDescription,\n  handleUpdateCardTitle,\n  handleUpdateCardDescription,\n  handleAddMemberToCard,\n  handleSwitchToCardDescriptionForm,\n  handleSwitchToCardDescriptionDisplay,\n  handleSwitchToCardTitleForm,\n  handleSwitchToCardTitleDisplay,\n  showCardDescriptionForm,\n  showCardTitleForm,\n  isLoading,\n  title,\n  userList,\n  handleSelectMemberFromDropdown,\n  showDuplicateMemberWarning,\n  handleCloseDuplicateMemberWarning,\n  handleDeleteMemberFromCard,\n  index,\n  lists,\n  currentList,\n  //currentCard,\n  handleShowAddItemForm,\n  handleHideAddItemForm,\n  showChecklistItemForm,\n  handleCreateChecklist,\n  handleAddChecklistItem,\n  handleCheckItem,\n  handleDisplayChecklistTitleForm,\n  handleHideChecklistTitleForm,\n  showChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  handleDeleteChecklist,\n  handleOpenAddMemberDropdown,\n  showAddMemberDropdown,\n  handleActivateMemberListDropdown,\n  showMemberListDropdown,\n  handleEditChecklistItemForm,\n}) => {\n  let classes\n  if (activeCardModal === cardId) {\n    classes = `modal is-active is clipped ${cardId}`\n  } else {\n    classes = `modal ${cardId}`\n  }\n\n  let currentBoard = currentUser.boards.filter(board => {\n    return JSON.stringify(board._id) === JSON.stringify(currentUser.activeBoard)\n  })[0]\n\n  //console.log('current card ' + currentCard)\n\n  console.log('currentBoard ' + JSON.stringify(currentBoard))\n  console.log('lists ' + JSON.stringify(lists[0]._id))\n  console.log('listId ' + JSON.stringify(listId))\n\n  let membersList\n\n  console.log(JSON.stringify(currentList))\n\n  let currentCard = currentList.cards.filter(listCard => {\n    return JSON.stringify(listCard._id) === JSON.stringify(cardId)\n  })[0]\n\n  if (currentCard.members) {\n    membersList = currentCard.members.map(member => {\n      return (\n        <div className=\"member\" key={member}>\n          {member}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Draggable draggableId={cardId} index={index}>\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          provided={provided}\n          ref={provided.innerRef}\n        >\n          <div\n            id={cardId}\n            className={snapshot.isDragging ? 'card is-dragging' : 'card'}\n            data-target={cardId}\n            aria-haspopup=\"true\"\n            onClick={handleActiveCardModal}\n          >\n            <CardMemberList members={membersList} />\n            <div className=\"card-content task is-hovered\">{title}</div>\n          </div>\n          <CardModal\n            currentUser={currentUser}\n            cardId={cardId}\n            attributeContent={attributeContent}\n            classes={classes}\n            handleActiveCardModal={handleActiveCardModal}\n            handleDeleteCard={handleDeleteCard}\n            listId={listId}\n            listName={listName}\n            handleUpdateCardTitle={handleUpdateCardTitle}\n            handleUpdateCardDescription={handleUpdateCardDescription}\n            handleAddMemberToCard={handleAddMemberToCard}\n            handleSwitchToCardDescriptionForm={\n              handleSwitchToCardDescriptionForm\n            }\n            showCardDescriptionForm={showCardDescriptionForm}\n            handleSwitchToCardDescriptionDisplay={\n              handleSwitchToCardDescriptionDisplay\n            }\n            handleSwitchToCardTitleForm={handleSwitchToCardTitleForm}\n            handleSwitchToCardTitleDisplay={handleSwitchToCardTitleDisplay}\n            showCardTitleForm={showCardTitleForm}\n            isLoading={isLoading}\n            members={userList}\n            handleSelectMemberFromDropdown={handleSelectMemberFromDropdown}\n            showDuplicateMemberWarning={showDuplicateMemberWarning}\n            handleCloseDuplicateMemberWarning={\n              handleCloseDuplicateMemberWarning\n            }\n            handleDeleteMemberFromCard={handleDeleteMemberFromCard}\n            lists={lists}\n            currentList={currentList}\n            currentCard={currentCard}\n            handleShowAddItemForm={handleShowAddItemForm}\n            handleHideAddItemForm={handleHideAddItemForm}\n            showChecklistItemForm={showChecklistItemForm}\n            handleCreateChecklist={handleCreateChecklist}\n            handleAddChecklistItem={handleAddChecklistItem}\n            handleCheckItem={handleCheckItem}\n            handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n            handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n            showChecklistTitleForm={showChecklistTitleForm}\n            handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n            handleDeleteChecklist={handleDeleteChecklist}\n            handleOpenAddMemberDropdown={handleOpenAddMemberDropdown}\n            showAddMemberDropdown={showAddMemberDropdown}\n            handleActivateMemberListDropdown={handleActivateMemberListDropdown}\n            showMemberListDropdown={showMemberListDropdown}\n            handleEditCardTitle={handleEditCardTitle}\n            handleEditCardDescription={handleEditCardDescription}\n            handleEditChecklistItemForm={handleEditChecklistItemForm}\n          />\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Card from '../components/Card'\nimport {\n  changeActiveCardModal,\n  deleteCard,\n  editCardTitle,\n  updateCardTitle,\n  editCardDescription,\n  updateCardDescription,\n  addMemberToCard,\n  switchToCardDescriptionForm,\n  switchToCardDescriptionDisplay,\n  switchToCardDTitleForm,\n  switchToCardTItleDisplay,\n  getAllUsers,\n  selectMemberFromDropdown,\n  closeDuplicateMemberWarning,\n  deleteMemberFromCard,\n  setCurrentListAndCard,\n  showAddItemForm,\n  hideAddItemForm,\n  createChecklist,\n  addChecklistItem,\n  checkChecklistItem,\n  HideChecklistTitleForm,\n  displayChecklistTitleForm,\n  updateChecklistTitle,\n  deleteChecklist,\n  openMemberDropdown,\n  activateMemberListDropdown,\n  editChecklistItemForm,\n} from '../actions'\n\nclass CardContainer extends Component {\n  render() {\n    const {\n      currentUser,\n      attributeContent,\n      activeCardModal,\n      handleActiveCardModal,\n      cardId,\n      handleDeleteCard,\n      listId,\n      listName,\n      handleCardAttributeEdit,\n      handleUpdateCardTitle,\n      handleUpdateCardDescription,\n      handleAddMemberToCard,\n      handleSwitchToCardDescriptionForm,\n      handleSwitchToCardDescriptionDisplay,\n      showCardDescriptionForm,\n      handleSwitchToCardTitleForm,\n      handleSwitchToCardTitleDisplay,\n      showCardTitleForm,\n      isLoading,\n      title,\n      userList,\n      handleSelectMemberFromDropdown,\n      showDuplicateMemberWarning,\n      handleCloseDuplicateMemberWarning,\n      handleDeleteMemberFromCard,\n      index,\n      lists,\n      currentList,\n      currentCard,\n      handleShowAddItemForm,\n      handleHideAddItemForm,\n      showChecklistItemForm,\n      handleCreateChecklist,\n      handleAddChecklistItem,\n      handleCheckItem,\n      handleDisplayChecklistTitleForm,\n      handleHideChecklistTitleForm,\n      showChecklistTitleForm,\n      handleUpdateChecklistTitle,\n      handleDeleteChecklist,\n      handleOpenAddMemberDropdown,\n      showAddMemberDropdown,\n      handleActivateMemberListDropdown,\n      ShowMemberListDropdown,\n      handleEditCardTitle,\n      handleEditCardDescription,\n      handleEditChecklistItemForm,\n    } = this.props\n    console.log(activeCardModal)\n    return (\n      <Card\n        currentUser={currentUser}\n        attributeContent={attributeContent}\n        activeCardModal={activeCardModal}\n        handleActiveCardModal={handleActiveCardModal}\n        cardId={cardId}\n        handleDeleteCard={handleDeleteCard}\n        listId={listId}\n        listName={listName}\n        handleEditCardTitle={handleEditCardTitle}\n        handleEditCardDescription={handleEditCardDescription}\n        handleUpdateCardTitle={handleUpdateCardTitle}\n        handleUpdateCardDescription={handleUpdateCardDescription}\n        handleAddMemberToCard={handleAddMemberToCard}\n        handleSwitchToCardDescriptionForm={handleSwitchToCardDescriptionForm}\n        handleSwitchToCardDescriptionDisplay={\n          handleSwitchToCardDescriptionDisplay\n        }\n        handleSwitchToCardTitleForm={handleSwitchToCardTitleForm}\n        handleSwitchToCardTitleDisplay={handleSwitchToCardTitleDisplay}\n        showCardDescriptionForm={showCardDescriptionForm}\n        showCardTitleForm={showCardTitleForm}\n        isLoading={isLoading}\n        title={title}\n        userList={userList}\n        handleSelectMemberFromDropdown={handleSelectMemberFromDropdown}\n        showDuplicateMemberWarning={showDuplicateMemberWarning}\n        handleCloseDuplicateMemberWarning={handleCloseDuplicateMemberWarning}\n        handleDeleteMemberFromCard={handleDeleteMemberFromCard}\n        index={index}\n        lists={lists}\n        currentList={currentList}\n        currentCard={currentCard}\n        handleShowAddItemForm={handleShowAddItemForm}\n        handleHideAddItemForm={handleHideAddItemForm}\n        showChecklistItemForm={showChecklistItemForm}\n        handleCreateChecklist={handleCreateChecklist}\n        handleAddChecklistItem={handleAddChecklistItem}\n        handleCheckItem={handleCheckItem}\n        handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n        handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n        showChecklistTitleForm={showChecklistTitleForm}\n        handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n        handleDeleteChecklist={handleDeleteChecklist}\n        handleOpenAddMemberDropdown={handleOpenAddMemberDropdown}\n        showAddMemberDropdown={showAddMemberDropdown}\n        handleActivateMemberListDropdown={handleActivateMemberListDropdown}\n        ShowMemberListDropdown={ShowMemberListDropdown}\n        handleEditChecklistItemForm={handleEditChecklistItemForm}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let currentList\n  // let currentCard\n  return {\n    currentUser: state.currentUser,\n    title: ownProps.title,\n    cardId: ownProps.cardId,\n    activeCardModal: state.activeCardModal,\n    listId: ownProps.listId,\n    listName: ownProps.listName,\n    showCardDescriptionForm: state.showCardDescriptionForm,\n    showCardTitleForm: state.showCardTitleForm,\n    attributeContent: state.attributeContent,\n    isLoading: state.isLoading,\n    userList: state.userList,\n    showDuplicateMemberWarning: state.showDuplicateMemberWarning,\n    index: ownProps.index,\n    lists: state.activeBoardLists,\n    currentList: (currentList = state.activeBoardLists.filter(boardList => {\n      return JSON.stringify(boardList._id) === JSON.stringify(ownProps.listId)\n    })[0]),\n    showChecklistItemForm: state.showChecklistItemForm,\n    showChecklistTitleForm: state.showChecklistTitleForm,\n    showAddMemberDropdown: state.showAddMemberDropdown,\n    showMemberListDropdown: state.showMemberListDropdown,\n    // currentCard: currentList.cards.filter(listCard => {\n    //   return JSON.stringify(listCard._id) === JSON.stringify(ownProps.cardId)\n    // })[0],\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleActiveCardModal: e => {\n      let id = e.target.parentElement.id\n      dispatch(changeActiveCardModal(id))\n      dispatch(getAllUsers())\n    },\n\n    handleDeleteCard: e => {\n      let cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement.id\n      let listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id\n      dispatch(deleteCard(cardId, listId))\n      dispatch(changeActiveCardModal())\n    },\n\n    handleUpdateCardTitle: e => {\n      e.preventDefault()\n      let cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement.id\n      let listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id\n      dispatch(updateCardTitle(e, listId, cardId))\n    },\n\n    handleUpdateCardDescription: e => {\n      e.preventDefault()\n      dispatch(updateCardDescription(e))\n    },\n\n    handleAddMemberToCard: e => {\n      e.preventDefault()\n      dispatch(addMemberToCard(e))\n    },\n\n    handleSwitchToCardDescriptionForm: () => {\n      dispatch(switchToCardDescriptionForm())\n    },\n\n    handleSwitchToCardDescriptionDisplay: () => {\n      dispatch(switchToCardDescriptionDisplay())\n    },\n\n    handleEditCardTitle: e => {\n      let title = e.target.value\n      dispatch(editCardTitle(title))\n    },\n\n    handleEditCardDescription: e => {\n      let description = e.target.value\n      dispatch(editCardDescription(description))\n    },\n\n    handleSwitchToCardTitleForm: () => {\n      dispatch(switchToCardDTitleForm())\n    },\n\n    handleSwitchToCardTitleDisplay: () => {\n      dispatch(switchToCardTItleDisplay())\n    },\n\n    handleSelectMemberFromDropdown: e => {\n      let member = e.target.innerHTML\n      //document.getElementById('dropdown-selection').innerHTML = member\n      dispatch(selectMemberFromDropdown(member))\n      dispatch(addMemberToCard(e))\n    },\n\n    handleCloseDuplicateMemberWarning: () => {\n      dispatch(closeDuplicateMemberWarning())\n    },\n\n    handleDeleteMemberFromCard: e => {\n      dispatch(deleteMemberFromCard(e))\n    },\n\n    handleShowAddItemForm: e => {\n      let checklistId = e.target.parentElement.id\n      dispatch(showAddItemForm(checklistId))\n    },\n\n    handleHideAddItemForm: () => {\n      dispatch(hideAddItemForm())\n    },\n\n    handleCreateChecklist: (cardId, listId) => {\n      // console.log(\n      //   e.target.parentElement.parentElement.parentElement.parentElement.id,\n      // )\n      // let cardId =\n      //   e.target.parentElement.parentElement.parentElement.parentElement.id\n      // let listId =\n      //   e.target.parentElement.parentElement.parentElement.parentElement\n      //     .firstChild.id\n      dispatch(createChecklist(cardId, listId))\n    },\n\n    handleAddChecklistItem: e => {\n      e.preventDefault()\n      dispatch(addChecklistItem(e))\n      dispatch(hideAddItemForm())\n    },\n\n    handleCheckItem: e => {\n      console.log(e.target.parentElement.id)\n      dispatch(checkChecklistItem(e))\n    },\n\n    handleDisplayChecklistTitleForm: e => {\n      console.log(e.target.parentElement.id)\n      let checklistId = e.target.parentElement.id\n      dispatch(displayChecklistTitleForm(checklistId))\n    },\n\n    handleHideChecklistTitleForm: e => {\n      e.preventDefault()\n      dispatch(HideChecklistTitleForm())\n    },\n\n    handleUpdateChecklistTitle: e => {\n      e.preventDefault()\n      dispatch(HideChecklistTitleForm())\n      dispatch(updateChecklistTitle(e))\n    },\n\n    handleDeleteChecklist: e => {\n      e.preventDefault()\n      console.log(e.target.parentElement.parentElement.parentElement.id)\n      dispatch(deleteChecklist(e))\n    },\n\n    handleOpenAddMemberDropdown: () => {\n      dispatch(openMemberDropdown())\n    },\n\n    handleActivateMemberListDropdown: () => {\n      dispatch(activateMemberListDropdown())\n    },\n\n    handleEditChecklistItemForm: e => {\n      let item = e.target.value\n      dispatch(editChecklistItemForm(item))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardContainer)\n","import React from 'react'\n\nconst CardForm = ({\n  handleSaveCard,\n  handleHideCardForm,\n  handleTitleChange,\n}) => {\n  return (\n    <form onSubmit={handleSaveCard}>\n      <textarea className=\"textarea\" onChange={handleTitleChange}></textarea>\n      <div className=\"field is-grouped\" id=\"cardForm-buttons\">\n        <p className=\"control\">\n          <button className=\"button is-primary is-light\" type=\"submit\">\n            save\n          </button>\n        </p>\n        <p className=\"control\">\n          <button\n            className=\"button is-danger is-light\"\n            onClick={handleHideCardForm}\n          >\n            cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CardForm\n","import React from 'react'\nimport CardContainer from '../containers/CardContainer'\nimport CardForm from './CardForm'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst List = ({\n  currentUser,\n  id,\n  deleteList,\n  handleListNameChange,\n  handleSaveCard,\n  handleShowCardForm,\n  handleHideCardForm,\n  showCardForm,\n  handleTitleChange,\n  lists,\n}) => {\n  let currentBoard = currentUser.boards.filter(board => {\n    return board._id === currentUser.activeBoard\n  })\n\n  console.log(currentBoard)\n  console.log('list lists ' + JSON.stringify(lists))\n\n  let currentList = lists.filter(list => {\n    return id === list._id\n  })\n\n  console.log(currentList)\n  let cardComponents\n  let cardForm\n  let name = currentList[0].name\n  let cards = currentList[0].cards\n\n  if (cards) {\n    cardComponents = cards.map((card, index) => {\n      return (\n        <CardContainer\n          title={card.title}\n          cardId={card._id}\n          listId={id}\n          listName={currentList[0].name}\n          key={card._id}\n          index={index}\n        />\n      )\n    })\n  }\n\n  if (showCardForm === id) {\n    cardForm = (\n      <CardForm\n        handleSaveCard={handleSaveCard}\n        handleHideCardForm={handleHideCardForm}\n        handleTitleChange={handleTitleChange}\n      />\n    )\n  } else {\n    cardForm = null\n  }\n\n  return (\n    <Droppable droppableId={id}>\n      {(provided, snapshot) => (\n        <div\n          provided={provided}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          className={\n            snapshot.isDraggingOver\n              ? 'list tile is-2 is-vertical is-parent notification is-dragging-over'\n              : 'list tile is-2 is-vertical is-parent notification is-light'\n          }\n        >\n          <a className=\"delete-list delete is-medium\" onClick={deleteList}></a>\n          <div id={id}>\n            <div className=\"list-name is-size-5\">\n              <input\n                id=\"list-name\"\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Enter List Name\"\n                defaultValue={name}\n                onBlur={handleListNameChange}\n              />\n            </div>\n\n            {cardComponents}\n            {provided.placeholder}\n\n            {cardForm}\n            <button\n              className=\"button is-primary is-light is-fullwidth\"\n              onClick={handleShowCardForm}\n            >\n              + Add Card\n            </button>\n          </div>\n        </div>\n      )}\n    </Droppable>\n  )\n}\n\nexport default List\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport List from '../components/List'\nimport {\n  deleteList,\n  changeName,\n  createCardForm,\n  saveCard,\n  hideCardForm,\n  changeTitle,\n} from '../actions'\n\nclass ListContainer extends Component {\n  render() {\n    const {\n      id,\n      deleteList,\n      handleListNameChange,\n      currentUser,\n      handleSaveCard,\n      handleShowCardForm,\n      handleHideCardForm,\n      showCardForm,\n      handleTitleChange,\n      lists,\n    } = this.props\n    return (\n      <List\n        id={id}\n        deleteList={deleteList}\n        handleListNameChange={handleListNameChange}\n        currentUser={currentUser}\n        handleSaveCard={handleSaveCard}\n        handleShowCardForm={handleShowCardForm}\n        handleHideCardForm={handleHideCardForm}\n        showCardForm={showCardForm}\n        handleTitleChange={handleTitleChange}\n        lists={lists}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    id: ownProps.id,\n    currentUser: state.currentUser,\n    showCardForm: state.showCardForm,\n    lists: state.activeBoardLists,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: e => {\n      dispatch(deleteList(e))\n    },\n\n    handleListNameChange: e => {\n      let componentName = e.target.value\n      dispatch(changeName(e, componentName, '/changeListName'))\n    },\n\n    handleShowCardForm: e => {\n      let listId = e.target.parentElement.id\n      dispatch(createCardForm(listId))\n    },\n\n    handleHideCardForm: e => {\n      dispatch(hideCardForm())\n    },\n\n    handleSaveCard: e => {\n      dispatch(saveCard(e))\n    },\n\n    handleTitleChange: e => {\n      let title = e.target.value\n      console.log(title)\n      dispatch(changeTitle(title))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer)\n","import React from 'react'\nimport ListContainer from '../containers/ListContainer'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nconst Board = ({\n  handleClick,\n  name,\n  lists,\n  handleBoardNameChange,\n  currentUser,\n  showBoardNameDisplay,\n  handleHideBoardNameDisplay,\n  handleOnDragEnd,\n}) => {\n  let boardLists\n  if (lists) {\n    boardLists = lists.map(list => {\n      return <ListContainer id={list._id} key={list._id} />\n    })\n  }\n\n  let activeBoard = currentUser.boards.filter(board => {\n    return JSON.stringify(board._id) === JSON.stringify(currentUser.activeBoard)\n  })\n\n  console.log('name display ' + showBoardNameDisplay)\n\n  let boardNameDisplayClasses = showBoardNameDisplay\n    ? 'board-name-display'\n    : 'board-name-display hidden'\n\n  let boardNameInputClasses = showBoardNameDisplay\n    ? 'input is-large has-text-dark has-background-white-bis hidden'\n    : 'input is-large has-text-dark has-background-white-bis'\n\n  console.log('active board ' + JSON.stringify(activeBoard[0].name))\n  return (\n    <div className=\"board\">\n      <div className=\"is-size-4 board-name\">\n        <div>\n          <input\n            id=\"board-name\"\n            className={boardNameInputClasses}\n            type=\"text\"\n            onBlur={handleBoardNameChange}\n            defaultValue={activeBoard[0].name}\n            placeholder={showBoardNameDisplay ? 'Enter Board Name...' : ''}\n          />\n        </div>\n        <div\n          className={boardNameDisplayClasses}\n          onClick={handleHideBoardNameDisplay}\n        >\n          {activeBoard[0].name ? activeBoard[0].name : 'Enter Board Name...'}\n        </div>\n      </div>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        {boardLists}\n      </DragDropContext>\n      <button\n        className=\"button add-list is-light is-large is-outlined is-primary\"\n        onClick={handleClick}\n      >\n        Add A List...\n      </button>\n    </div>\n  )\n}\n\nexport default Board\n","import React, { Component } from 'react'\nimport Board from '../components/Board'\nimport { connect } from 'react-redux'\nimport {\n  createList,\n  changeName,\n  changeShowBoardNameDisplay,\n  onDragEnd,\n} from '../actions'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nclass BoardContainer extends Component {\n  render() {\n    const {\n      handleClick,\n      currentUser,\n      currentBoard,\n      handleBoardNameChange,\n      showBoardNameDisplay,\n      handleHideBoardNameDisplay,\n      handleOnDragEnd,\n      lists,\n    } = this.props\n    let name\n    //let lists\n    //console.log(currentBoard)\n    if (currentBoard && currentBoard[0]) {\n      //name = currentBoard[0].name\n      //lists = currentBoard[0].lists\n\n      console.log('BoardContainer ' + JSON.stringify(currentBoard))\n      return (\n        <Board\n          handleClick={handleClick}\n          //name={name}\n          lists={lists}\n          currentBoard={currentBoard}\n          handleBoardNameChange={handleBoardNameChange}\n          currentUser={currentUser}\n          showBoardNameDisplay={showBoardNameDisplay}\n          handleHideBoardNameDisplay={handleHideBoardNameDisplay}\n          handleOnDragEnd={handleOnDragEnd}\n        />\n      )\n    } else {\n      return (\n        <div className=\"no-board is-size-2 has-text-danger\">\n          no board selected\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: state.currentUser,\n    currentBoard: ownProps.currentBoard,\n    showBoardNameDisplay: state.showBoardNameDisplay,\n    lists: state.activeBoardLists,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClick: e => {\n      dispatch(createList(e))\n    },\n\n    handleBoardNameChange: e => {\n      let componentName = e.target.value\n      e.target.value = ''\n\n      dispatch(changeName(e, componentName, '/changeBoardName'))\n      dispatch(changeShowBoardNameDisplay())\n    },\n\n    handleHideBoardNameDisplay: () => {\n      dispatch(changeShowBoardNameDisplay())\n    },\n\n    handleOnDragEnd: result => {\n      dispatch(onDragEnd(result))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardContainer)\n","import React from 'react'\nimport BoardContainer from '../containers/BoardContainer'\nimport { Redirect } from 'react-router-dom'\n\nconst Show = ({\n  handleLogoutClick,\n  handleCreateBoard,\n  currentUser,\n  handleDeleteBoard,\n  handleActiveBoardSwitch,\n  redirect,\n}) => {\n  console.log('active ' + JSON.stringify(currentUser))\n  let boards = []\n  let boardNames = []\n  let dropdownItems\n  if (currentUser.boards) {\n    boards = currentUser.boards.map(board => {\n      boardNames.push(board.name)\n      return <BoardContainer />\n    })\n    console.log(JSON.stringify(currentUser.boards))\n    dropdownItems = currentUser.boards.map((board, i) => {\n      console.log(i + ' ' + board._id)\n      return (\n        <a\n          className=\"navbar-item has-text-black\"\n          id={board._id}\n          onClick={handleActiveBoardSwitch}\n          key={board._id + '1'}\n        >\n          {board.name ? board.name : `board ${i + 1}`}\n        </a>\n      )\n    })\n  }\n\n  var activeBoard\n  if (currentUser.activeBoard) {\n    activeBoard = currentUser.boards.filter(board => {\n      return board._id === currentUser.activeBoard\n    })\n  }\n\n  activeBoard = <BoardContainer currentBoard={activeBoard} />\n  console.log(currentUser.activeBoard)\n\n  if (redirect === '/login') {\n    return <Redirect to={redirect} />\n  }\n  return (\n    <div className=\"show has-background-white-bis\">\n      <div>\n        <nav\n          className=\"navbar has-background-grey-light\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\">\n            <div className=\"navbar-item is-size-1 is-family-secondary has-text-white\">\n              DJELLO\n            </div>\n          </div>\n          <div className=\"navbar-end\">\n            <div id=\"board-dropdown-board-buttons-container\">\n              <div class=\"dropdown board-dropdown is-hoverable is-right\">\n                <div class=\"dropdown-trigger\">\n                  <button\n                    class=\"button\"\n                    aria-haspopup=\"true\"\n                    aria-controls=\"dropdown-menu4\"\n                  >\n                    <span>Boards</span>\n                    <span class=\"icon is-small\">\n                      <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                    </span>\n                  </button>\n                </div>\n                <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\n                  <div class=\"dropdown-content\">\n                    <div class=\"dropdown-item\">{dropdownItems}</div>\n                  </div>\n                </div>\n              </div>\n              <div id=\"add-delete-board\">\n                <button\n                  // className=\"button is-primary is-light is-large is-outlined create-board-button\"\n                  className=\"button is-primary is-light create-board-button\"\n                  title=\"create new board\"\n                  onClick={handleCreateBoard}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-plus\"></i>\n                  </span>\n                </button>\n                <button\n                  className=\"button is-danger is-light delete-board-button\"\n                  title=\"delete current board\"\n                  onClick={handleDeleteBoard}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-minus-circle\"></i>\n                  </span>\n                  {/* <span>Delete Current Board</span> */}\n                </button>\n              </div>\n            </div>\n            <div className=\"navbar-item\">\n              <div className=\"logout\">\n                <a\n                  className=\"button is-danger is-light\"\n                  onClick={handleLogoutClick}\n                >\n                  Sign Out\n                </a>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"current-board\">{activeBoard}</div>\n    </div>\n  )\n}\n\nexport default Show\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Show from '../components/Show'\nimport {\n  handleLogOut,\n  createBoard,\n  deleteBoard,\n  switchActiveBoard,\n  redirectAfterLogout,\n} from '../actions'\n\nclass ShowContainer extends Component {\n  render() {\n    const {\n      handleLogoutClick,\n      handleCreateBoard,\n      currentUser,\n      handleDeleteBoard,\n      handleActiveBoardSwitch,\n      redirect,\n    } = this.props\n    return (\n      <Show\n        handleLogoutClick={handleLogoutClick}\n        handleCreateBoard={handleCreateBoard}\n        handleDeleteBoard={handleDeleteBoard}\n        currentUser={currentUser}\n        handleActiveBoardSwitch={handleActiveBoardSwitch}\n        redirect={redirect}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    redirect: state.redirect,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogoutClick: e => {\n      dispatch(handleLogOut(e))\n    },\n\n    handleCreateBoard: e => {\n      dispatch(createBoard(e))\n    },\n\n    handleDeleteBoard: e => {\n      dispatch(deleteBoard(e))\n    },\n\n    handleActiveBoardSwitch: e => {\n      dispatch(switchActiveBoard(e))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowContainer)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  return (\n    <div id=\"Home\" className=\"hero is-primary is-bold is-fullheight\">\n      <div className=\"hero-body\">\n        <h1 className=\"is-size-1 has-text-weight-light\">DJELLO</h1>\n        <p>The task manager of tomorrow, today.</p>\n        <div>\n          <Link to=\"/login\">\n            <button className=\"button\">Sign in</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'bulma/css/bulma.css'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport RegisterContainer from './containers/RegisterContainer'\nimport LoginContainer from './containers/LoginContainer'\nimport withAuth from './components/withAuth'\nimport ShowContainer from './containers/ShowContainer'\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App container is-fluid\">\n        <Switch>\n          {/* <Route path=\"/\" exact component={BoardContainer} /> */}\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" exact component={LoginContainer} />\n          <Route path=\"/register\" component={RegisterContainer} />\n          <Route path=\"/:user\" component={withAuth(ShowContainer)} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\n\nexport default function withAuth(ComponentToProtect) {\n    return class extends Component {\n        constructor() {\n            super();\n            this.state = {\n                loading: true,\n                redirect: false\n            };\n        }\n    componentDidMount() {\n        fetch('/checkForCurrentUser')\n            .then(res => {\n                console.log(res.status)\n                if(res.status === 200){\n                    this.setState({\n                        loading:false\n                    })\n                } else {\n                    const error = new Error(res.error);\n                    throw error;    \n                }\n            })\n            .catch(err => {\n                console.error(err);\n                this.setState({ loading: false, redirect: true });\n            });\n    }\n\n        render() {\n            const { loading, redirect } = this.state;\n            if(loading) {\n                return null;\n            } \n            if(redirect) {\n                return <Redirect to=\"/login\" />;\n            }\n            return <ComponentToProtect {...this.props} />\n        }\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistor, store } from './config/configureStore'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}