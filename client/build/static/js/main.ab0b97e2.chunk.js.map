{"version":3,"sources":["actions.js","reducers.js","config/configureStore.js","components/Register.js","containers/RegisterContainer.js","components/Login.js","containers/LoginContainer.js","components/CardDescriptionForm.js","components/CardDescriptionDisplay.js","components/CardTitleForm.js","components/CardTitleDisplay.js","components/ChecklistItemForm.js","components/ChecklistTitleForm.js","components/ChecklistTitleDisplay.js","components/Checklist.js","components/CardModal.js","components/CardMemberList.js","components/Card.js","containers/CardContainer.js","components/CardForm.js","components/List.js","containers/ListContainer.js","components/Board.js","containers/BoardContainer.js","components/Show.js","containers/ShowContainer.js","components/Home.js","App.js","components/withAuth.js","index.js"],"names":["require","getDataFailure","error","type","handleUsernameInputChange","data","handlePasswordInputChange","updateCurrentUser","changeActiveCardModal","id","updateActiveBoardLists","lists","handleSubmit","e","route","dispatch","getState","preventDefault","state","username","password","console","log","JSON","stringify","fetch","method","body","headers","then","res","status","json","Error","catch","err","alert","changeName","componentName","listId","target","parentElement","document","getElementById","innerHTML","value","currentUser","user","updateCardAttribute","cardId","attributeType","attributeContent","cardAttributeContent","firstChild","boardId","activeBoard","onDragEnd","result","Array","from","activeBoardLists","sourceListIndex","destinationListIndex","sourceList","destinationList","draggedCard","destination","source","draggableId","Promise","resolve","filter","list","droppableId","_id","forEach","index","cards","card","draoppableId","stateLists","splice","changeActiveBoardLists","initialState","isLoggingIn","currentBoard","userBoards","redirect","showCardForm","title","activeCardModal","showBoardNameDisplay","showCardDescriptionForm","showCardTitleForm","isLoading","userList","showDuplicateMemberWarning","currentList","currentCard","progressValue","showChecklistItemForm","showChecklistTitleForm","showAddMemberDropdown","showMemberListDropdown","persistConfig","key","storage","stateReconciler","autoMergeLevel2","blacklist","persistedReducer","persistReducer","action","boards","attribute","users","member","listAndCard","checklistId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","Register","onSubmit","onUsernameChange","onPasswordChange","className","name","placeholder","onChange","to","RegisterContainer","this","props","Component","connect","Login","LoginContainer","CardDescriptionForm","description","handleCardAttributeEdit","handleCardAttributeUpdate","handleSwitchToCardDescriptionDisplay","defaultValue","onClick","CardDescriptionDisplay","handleSwitchToCardDescriptionForm","CardTitleForm","handleSwitchToCardTitleDisplay","CardTitleDisplay","handleSwitchToCardTitleForm","ChecklistItemForm","handleHideAddItemForm","handleAddChecklistItem","ChecklistTitleForm","handleHideChecklistTitleForm","handleUpdateChecklistTitle","ChecklistTitleDisplay","handleDisplayChecklistTitleForm","handleDeleteChecklist","Checklist","itemForm","checklistTitleComponent","items","handleCheckItem","handleShowAddItemForm","listItems","map","item","labelClasses","checked","content","for","checkedItemLength","length","class","max","CardModal","members","classes","handleActiveCardModal","handleDeleteCard","listName","handleSelectMemberFromDropdown","handleCloseDuplicateMemberWarning","handleDeleteMemberFromCard","handleCreateChecklist","handleOpenAddMemberDropdown","handleActivateMemberListDropdown","cardActivity","descriptionForm","descriptionDisplay","titleForm","titleDisplay","descriptionComponent","titleComponent","addedMembersList","checklists","memberList","board","activity","checklist","href","checklistsHeading","notificationClasses","memberDropdownClasses","aria-label","aria-haspopup","aria-controls","role","CardMemberList","Card","membersList","listCard","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","data-target","CardContainer","ShowMemberListDropdown","ownProps","boardList","deleteCard","editCardAttribute","selectMemberFromDropdown","previousSibling","deleteMemberFromCard","showAddItemForm","createChecklist","addChecklistItem","checklistItemId","checkChecklistItem","displayChecklistTitleForm","updateChecklistTitle","deleteChecklist","CardForm","handleSaveCard","handleHideCardForm","handleTitleChange","List","deleteList","handleListNameChange","handleShowCardForm","cardComponents","cardForm","droppableProps","isDraggingOver","onBlur","ListContainer","createCardForm","saveCard","changeTitle","Board","boardLists","handleClick","handleBoardNameChange","handleHideBoardNameDisplay","handleOnDragEnd","boardNameDisplayClasses","boardNameInputClasses","BoardContainer","Show","handleLogoutClick","handleCreateBoard","handleDeleteBoard","handleActiveBoardSwitch","dropdownItems","boardNames","push","i","aria-hidden","ShowContainer","switchActiveBoard","Home","App","path","exact","component","ComponentToProtect","loading","setState","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab0b97e2.chunk.js","sourcesContent":["import { get } from 'mongoose'\nvar _ = require('lodash')\n\nexport const GET_DATA_REQUEST = 'GET_DATA_REQUEST'\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\nexport const GET_DATA_FAILURE = 'GET_DATA_FAILURE'\n\nexport const HANDLE_USERNAME_INPUT_CHANGE = 'HANDLE_USERNAME_INPUT_CHANGE'\nexport const HANDLE_PASSWORD_INPUT_CHANGE = 'HANDLE_PASSWORD_INPUT_CHANGE'\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD'\nexport const UPDATE_CURRENT_USER = 'UPDATE_CURRENT_USER'\nexport const CHANGE_BOARD_NAME = 'CHANGE_BOARD_NAME'\nexport const CREATE_CARD_FORM = 'CREAT_CARD_FORM'\nexport const HIDE_CARD_FORM = 'HIDE_CARD_FORM'\nexport const CHANGE_TITLE = 'CHANGE_TITLE'\nexport const CHANGE_ACTIVE_CARD_MODAL = 'CHANGE_ACTIVE_CARD_MODAL'\nexport const EDIT_CARD_ATTRIBUTE = 'EDIT_CARD_ATTRIBUTE'\nexport const CHANGE_SHOW_BOARD_NAME_DISPLAY = 'SHOW_BOARD_NAME_DISPLAY'\nexport const SWITCH_TO_CARD_DESCRIPTION_FORM = 'SWITCH_TO_CARD_DESCRIPTION_FORM'\nexport const SWITCH_TO_CARD_DESCRIPTION_DISPLAY =\n  'SWITCH_TO_CARD_DESCRIPTION_DISPLAY'\nexport const SWITCH_TO_CARD_TITLE_FORM = 'SWITCH_TO_CARD_TITLE_FORM'\nexport const SWITCH_TO_CARD_TITLE_DISPLAY = 'SWITCH_TO_CARD_TITLE_DISPLAY'\nexport const TOGGLE_IS_LOADING = 'TOGGLE_IS_LOADING'\nexport const REDIRECT_AFTER_LOGOUT = 'REDIRECT_AFTER_LOGOUT'\nexport const UPDATE_USER_LIST = 'UPDATE_USER_LIST'\nexport const SELECT_MEMBER_FROM_DROPDOWN = 'SELECT_MEMBER_FROM_DROPDOWN'\nexport const DISPLAY_DUPLICATE_MEMBER_WARNING =\n  'DISPLAY_DUPLICATE_MEMBER_WARNING'\nexport const CLOSE_DUPLICATE_MEMBER_WARNING = 'CLOSE_DUPLICATE_MEMBER_WARNING'\nexport const UPDATE_ACTIVE_BOARD_LISTS = 'UPDATE_ACTIVE_BOARD_LISTS'\nexport const SET_CURRENT_LIST_AND_CARD = 'SET_CURRENT_LIST_AND_CARD'\nexport const SHOW_ADD_ITEM_FORM = 'SHOW_ADD_ITEM_FORM'\nexport const HIDE_ADD_ITEM_FORM = 'HIDE_ADD_ITEM_FORM'\nexport const DISPLAY_CHECKLIST_TITLE_FORM = 'DISPLAY_CHECKLIST_TITLE_FORM'\nexport const HIDE_CHECKLIST_TITLE_FORM = 'HIDE_CHECKLIST_TITLE_FORM'\nexport const OPEN_MEMBER_DROPDOWN = 'OPEN_MEMBER_DROPDOWN'\nexport const ACTIVATE_MEMBER_LIST_DROPDOWN = 'ACTIVATE_MEMBER_LIST_DROPDOWN'\n\nexport function getDataRequest() {\n  return {\n    type: GET_DATA_REQUEST,\n  }\n}\n\nexport function getDataSuccess(data) {\n  return {\n    type: GET_DATA_SUCCESS,\n    data,\n  }\n}\n\nexport function getDataFailure(error) {\n  return {\n    type: GET_DATA_FAILURE,\n    error,\n  }\n}\n\nexport function handleUsernameInputChange(data) {\n  return {\n    type: HANDLE_USERNAME_INPUT_CHANGE,\n    data,\n  }\n}\n\nexport function handlePasswordInputChange(data) {\n  return {\n    type: HANDLE_PASSWORD_INPUT_CHANGE,\n    data,\n  }\n}\n\nexport function setCurrentBoard(data) {\n  return {\n    type: SET_CURRENT_BOARD,\n    data,\n  }\n}\n\nexport function updateCurrentUser(data) {\n  return {\n    type: UPDATE_CURRENT_USER,\n    data,\n  }\n}\n\nexport function createCardForm(listId) {\n  return {\n    type: CREATE_CARD_FORM,\n    listId,\n  }\n}\n\nexport function hideCardForm() {\n  return {\n    type: HIDE_CARD_FORM,\n  }\n}\n\nexport function changeTitle(title) {\n  return {\n    type: CHANGE_TITLE,\n    title,\n  }\n}\n\nexport function changeActiveCardModal(id) {\n  return {\n    type: CHANGE_ACTIVE_CARD_MODAL,\n    id,\n  }\n}\n\nexport function editCardAttribute(attribute) {\n  return {\n    type: EDIT_CARD_ATTRIBUTE,\n    attribute,\n  }\n}\n\nexport function changeShowBoardNameDisplay() {\n  return {\n    type: CHANGE_SHOW_BOARD_NAME_DISPLAY,\n  }\n}\n\nexport function switchToCardDescriptionForm() {\n  return {\n    type: SWITCH_TO_CARD_DESCRIPTION_FORM,\n  }\n}\n\nexport function switchToCardDescriptionDisplay() {\n  return {\n    type: SWITCH_TO_CARD_DESCRIPTION_DISPLAY,\n  }\n}\n\nexport function switchToCardDTitleForm() {\n  return {\n    type: SWITCH_TO_CARD_TITLE_FORM,\n  }\n}\n\nexport function switchToCardTItleDisplay() {\n  return {\n    type: SWITCH_TO_CARD_TITLE_DISPLAY,\n  }\n}\n\nexport function toggleIsLoading() {\n  return {\n    type: TOGGLE_IS_LOADING,\n  }\n}\n\nexport function redirectAfterLogout() {\n  return {\n    type: REDIRECT_AFTER_LOGOUT,\n  }\n}\n\nexport function updateUserList(users) {\n  return {\n    type: UPDATE_USER_LIST,\n    users,\n  }\n}\n\nexport function selectMemberFromDropdown(member) {\n  return {\n    type: SELECT_MEMBER_FROM_DROPDOWN,\n    member,\n  }\n}\n\nexport function displayDuplicateMemberWarning() {\n  return {\n    type: DISPLAY_DUPLICATE_MEMBER_WARNING,\n  }\n}\n\nexport function closeDuplicateMemberWarning() {\n  return {\n    type: CLOSE_DUPLICATE_MEMBER_WARNING,\n  }\n}\n\nexport function updateActiveBoardLists(lists) {\n  return {\n    type: UPDATE_ACTIVE_BOARD_LISTS,\n    lists,\n  }\n}\n\nexport function setCurrentListAndCard(listAndCard) {\n  return {\n    type: SET_CURRENT_LIST_AND_CARD,\n    listAndCard,\n  }\n}\n\nexport function showAddItemForm(checklistId) {\n  return {\n    type: SHOW_ADD_ITEM_FORM,\n    checklistId,\n  }\n}\n\nexport function hideAddItemForm() {\n  return {\n    type: HIDE_ADD_ITEM_FORM,\n  }\n}\n\nexport function displayChecklistTitleForm(checklistId) {\n  return {\n    type: DISPLAY_CHECKLIST_TITLE_FORM,\n    checklistId,\n  }\n}\n\nexport function HideChecklistTitleForm() {\n  return {\n    type: HIDE_CHECKLIST_TITLE_FORM,\n  }\n}\n\nexport function openMemberDropdown() {\n  return {\n    type: OPEN_MEMBER_DROPDOWN,\n  }\n}\n\nexport function activateMemberListDropdown() {\n  return {\n    type: ACTIVATE_MEMBER_LIST_DROPDOWN,\n  }\n}\n\n//handles register and login\nexport function handleSubmit(e, route) {\n  return (dispatch, getState) => {\n    e.preventDefault()\n    let state = getState()\n    let username = state.username\n    let password = state.password\n    console.log(JSON.stringify({ username: username, password: password }))\n\n    fetch(route, {\n      method: 'POST',\n      body: JSON.stringify({ username: username, password: password }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        if (res.status === 200) {\n          console.log('Yay!')\n          return res.json()\n          //this.props.history.push('/')\n        } else {\n          console.log('no')\n          const error = new Error(res.error)\n          throw error\n        }\n      })\n      .then(json => {\n        console.log('submit ' + JSON.stringify(json))\n        dispatch(getDataSuccess(json))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('Error logging in')\n      })\n  }\n}\n\nexport function handleLogOut(e) {\n  return dispatch => {\n    fetch('/logout', {\n      method: 'POST',\n    })\n      .then(() => dispatch(redirectAfterLogout()))\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('Error logging out')\n      })\n  }\n}\n\nexport function createBoard(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    fetch('/createBoard', {\n      method: 'POST',\n      body: JSON.stringify({ currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log(res)\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        alert(err)\n      })\n  }\n}\n\nexport function createList(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    console.log('state ' + JSON.stringify(state))\n\n    fetch('/createList', {\n      method: 'POST',\n      body: JSON.stringify({ activeBoard: state.currentUser.activeBoard }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log('json ' + JSON.stringify(res))\n        return res.json()\n      })\n      .then(json => {\n        console.log('json ' + JSON.stringify(json))\n        //console.log('create list ' + JSON.stringify(json))\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteList(e) {\n  return dispatch => {\n    let listId = e.target.parentElement.id\n    fetch('/deleteList', {\n      method: 'DELETE',\n      body: JSON.stringify({ listId }),\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log(JSON.stringify(res))\n        return res.json()\n      })\n      .then(json => {\n        console.log(json)\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteBoard(e) {\n  return (dispatch, getState) => {\n    console.log('butts')\n    let state = getState()\n    let id = state.currentUser.activeBoard\n    fetch('/deleteBoard', {\n      method: 'DELETE',\n      body: JSON.stringify({ board: id }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        console.log('current User ' + JSON.stringify(json))\n        dispatch(updateCurrentUser(json))\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(getDataFailure(err))\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function changeName(e, componentName, route) {\n  return (dispatch, getState) => {\n    let listId\n    if (route === '/changeListName') {\n      listId = e.target.parentElement.parentElement.id\n    }\n    if (route === '/changeBoardName') {\n      document.getElementById('board-name').innerHTML = ''\n      e.target.value = ''\n    }\n    let state = getState()\n    let currentUser = state.currentUser\n    console.log('route ' + route)\n    fetch(route, {\n      method: 'POST',\n      body: JSON.stringify({ componentName, currentUser, listId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        console.log('change name ' + JSON.stringify(json))\n        if (route === '/changeListName') {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n        } else {\n          dispatch(updateCurrentUser(json.user))\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function saveCard(e) {\n  return (dispatch, getState) => {\n    e.preventDefault()\n    dispatch(hideCardForm())\n    let state = getState()\n    let currentUser = state.currentUser\n    let listId = e.target.parentElement.id\n    console.log('list yo ' + listId)\n    let title = state.title\n    fetch('/createCard', {\n      method: 'POST',\n      body: JSON.stringify({ listId, currentUser, title }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        if (json.error) {\n          alert(JSON.stringify(json.error))\n        } else {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteCard(cardId, listId) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    fetch('deleteCard', {\n      method: 'DELETE',\n      body: JSON.stringify({ cardId, listId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function switchActiveBoard(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let boardId = e.target.id\n    console.log('boardId ' + boardId)\n    fetch('switchActiveBoard', {\n      method: 'PATCH',\n      body: JSON.stringify({ boardId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function updateCardAttribute(e) {\n  return (dispatch, getState) => {\n    dispatch(toggleIsLoading())\n    let state = getState()\n    let attributeType = state.attributeType\n    let attributeContent = state.cardAttributeContent\n    let currentUser = state.currentUser\n    let listId\n    let cardId\n\n    if (attributeType === 'title') {\n      dispatch(switchToCardTItleDisplay())\n      cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement.id\n      listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id\n    } else if (attributeType === 'description') {\n      dispatch(switchToCardDescriptionDisplay())\n      cardId = e.target.parentElement.parentElement.parentElement.id\n      listId = e.target.parentElement.parentElement.parentElement.firstChild.id\n    } else if (attributeType === 'member') {\n      cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .parentElement.parentElement.parentElement.id\n      listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .parentElement.parentElement.parentElement.firstChild.id\n    } else if (attributeType === 'checklist-item') {\n      cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement.id\n      listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id\n    }\n\n    console.log('hello')\n\n    fetch('/updateCardAttribute', {\n      method: 'POST',\n      body: JSON.stringify({\n        attributeType,\n        attributeContent,\n        currentUser,\n        listId,\n        cardId,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        console.log('res ' + JSON.stringify(res))\n        if (res.status === 500) {\n          return res\n        } else {\n          return res.json()\n        }\n      })\n      .then(json => {\n        if (json.status === 500) {\n          dispatch(displayDuplicateMemberWarning())\n        } else if (attributeType === 'member') {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n          dispatch(addBoardToMember())\n        } else {\n          dispatch(updateActiveBoardLists(json.lists))\n          dispatch(updateCurrentUser(json.user))\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function getAllUsers() {\n  return dispatch => {\n    fetch('/getAllUsers')\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateUserList(json))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function addBoardToMember() {\n  return (dispatch, getState) => {\n    let state = getState()\n    console.log('state' + JSON.stringify(state))\n    let username = state.cardAttributeContent\n    let boardId = state.currentUser.activeBoard\n    fetch('/addBoardToMember', {\n      method: 'POST',\n      body: JSON.stringify({ username, boardId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    }).catch(err => {\n      console.log(err)\n      alert('hmmmm')\n    })\n  }\n}\n\nexport function deleteMemberFromCard(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.firstChild.id\n    let username = e.target.previousSibling.innerHTML\n\n    console.log('username ' + username)\n\n    fetch('/deleteMemberFromCard', {\n      method: 'DELETE',\n      body: JSON.stringify({ username, cardId, listId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function changeActiveBoardLists(\n  source,\n  destination,\n  draggableId,\n  stateLists,\n  sourceList,\n  destinationList,\n  draggedCard,\n  sourceListIndex,\n  destinationListIndex,\n) {\n  return dispatch => {\n    let lists = stateLists\n\n    if (\n      JSON.stringify(sourceList._id) === JSON.stringify(destinationList._id)\n    ) {\n      sourceList.cards.splice(source.index, 1)\n\n      sourceList.cards.splice(destination.index, 0, draggedCard)\n\n      lists.splice(sourceListIndex, 1, sourceList)\n      dispatch(updateActiveBoardLists(lists))\n    } else {\n      sourceList.cards.splice(source.index, 1)\n      destinationList.cards.splice(destination.index, 0, draggedCard)\n      lists.splice(sourceListIndex, 1, sourceList)\n\n      lists.splice(destinationListIndex, 1, destinationList)\n\n      dispatch(updateActiveBoardLists(lists))\n    }\n  }\n}\n\nexport function onDragEnd(result) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let lists = Array.from(state.activeBoardLists)\n    console.log(lists)\n    let currentUser = state.currentUser\n\n    const { destination, source, draggableId } = result\n\n    let sourceListIndex\n    let destinationListIndex\n    let sourceList\n    let destinationList\n    let draggedCard\n\n    Promise.resolve(\n      (sourceList = lists.filter(list => {\n        return JSON.stringify(source.droppableId) === JSON.stringify(list._id)\n      })[0]),\n      lists.forEach((list, index) => {\n        if (JSON.stringify(list._id) === JSON.stringify(source.droppableId)) {\n          sourceListIndex = index\n        }\n      }),\n      (destinationList = lists.filter(list => {\n        return (\n          JSON.stringify(destination.droppableId) === JSON.stringify(list._id)\n        )\n      })[0]),\n      lists.forEach((list, index) => {\n        if (\n          JSON.stringify(list._id) === JSON.stringify(destination.droppableId)\n        ) {\n          destinationListIndex = index\n        }\n      }),\n      (draggedCard = sourceList.cards.filter(card => {\n        return JSON.stringify(card._id) === JSON.stringify(draggableId)\n      })[0]),\n    ).then(() => {\n      console.log(draggableId)\n      console.log('source ' + JSON.stringify(source))\n      console.log('destination ' + JSON.stringify(destination))\n\n      if (!destination) {\n        return\n      }\n\n      if (\n        destination.draoppableId === source.droppableId &&\n        destination.index === source.index\n      ) {\n        return\n      }\n\n      dispatch(\n        changeActiveBoardLists(\n          source,\n          destination,\n          draggableId,\n          lists,\n          sourceList,\n          destinationList,\n          draggedCard,\n          sourceListIndex,\n          destinationListIndex,\n        ),\n      )\n    })\n\n    fetch('/updateListAfterDnD', {\n      method: 'POST',\n      body: JSON.stringify({\n        currentUser,\n        destination,\n        source,\n        draggableId,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateCurrentUser(json))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function createChecklist(e, listId, cardId) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    // let cardId =\n    //   e.target.parentElement.parentElement.parentElement.parentElement.id\n    // let listId =\n    //   e.target.parentElement.parentElement.parentElement.parentElement\n    //     .firstChild.id\n\n    console.log(cardId)\n\n    fetch('./createChecklist', {\n      method: 'POST',\n      body: JSON.stringify({ cardId, listId, currentUser }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function addChecklistItem(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistId = e.target.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .firstChild.id\n    let cardAttributeContent = state.cardAttributeContent\n\n    fetch('./addChecklistItem', {\n      method: 'POST',\n      body: JSON.stringify({\n        currentUser,\n        checklistId,\n        cardId,\n        listId,\n        cardAttributeContent,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function checkChecklistItem(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistItemId = e.target.parentElement.id\n    let checklistId = e.target.parentElement.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.firstChild.id\n    let attributeType = state.attributeType\n    let cardAttributeContent = state.cardAttributeContent\n\n    fetch('/checkChecklistItem', {\n      method: 'PATCH',\n      body: JSON.stringify({\n        currentUser,\n        checklistItemId,\n        checklistId,\n        cardId,\n        listId,\n        attributeType,\n        cardAttributeContent,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function updateChecklistTitle(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistId = e.target.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .firstChild.id\n    let title = state.cardAttributeContent\n\n    fetch('/updateChecklistTitle', {\n      method: 'PATCH',\n      body: JSON.stringify({ checklistId, currentUser, title, cardId, listId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n\nexport function deleteChecklist(e) {\n  return (dispatch, getState) => {\n    let state = getState()\n    let currentUser = state.currentUser\n    let checklistId = e.target.parentElement.parentElement.parentElement.id\n    let cardId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.id\n    let listId =\n      e.target.parentElement.parentElement.parentElement.parentElement\n        .parentElement.parentElement.firstChild.id\n\n    fetch('/deleteChecklist', {\n      method: 'DELETE',\n      body: JSON.stringify({ checklistId, currentUser, cardId, listId }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        dispatch(updateActiveBoardLists(json.lists))\n        dispatch(updateCurrentUser(json.user))\n      })\n      .catch(err => {\n        console.log(err)\n        alert('hmmmm')\n      })\n  }\n}\n","import * as Actions from './actions'\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoggingIn: false,\n  currentUser: {},\n  currentBoard: {},\n  userBoards: [],\n  error: '',\n  redirect: '',\n  showCardForm: false,\n  title: '',\n  activeCardModal: null,\n  cardAttributeContent: '',\n  showBoardNameDisplay: true,\n  showCardDescriptionForm: false,\n  showCardTitleForm: false,\n  attributeType: '',\n  isLoading: false,\n  userList: [],\n  showDuplicateMemberWarning: false,\n  activeBoardLists: [],\n  currentList: {},\n  currentCard: {},\n  progressValue: 0,\n  showChecklistItemForm: false,\n  showChecklistTitleForm: false,\n  showAddMemberDropdown: false,\n  showMemberListDropdown: false,\n}\n\nexport function djello(state = initialState, action) {\n  switch (action.type) {\n    case Actions.GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoggingIn: true,\n      }\n    case Actions.GET_DATA_SUCCESS:\n      console.log('reducer ' + JSON.stringify(action.data.user.activeBoard))\n      return {\n        ...state,\n        isLoggingIn: false,\n        currentUser: action.data.user,\n        redirect: action.data.redirect,\n        userBoards: action.data.boards,\n        currentBoard: action.data.user.activeBoard,\n        activeBoardLists: action.data.lists,\n      }\n    case Actions.GET_DATA_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        error: action.error,\n      }\n    case Actions.HANDLE_USERNAME_INPUT_CHANGE:\n      return {\n        ...state,\n        username: action.data,\n      }\n    case Actions.HANDLE_PASSWORD_INPUT_CHANGE:\n      return {\n        ...state,\n        password: action.data,\n      }\n    case Actions.SET_CURRENT_BOARD:\n      console.log(action.data)\n      return {\n        ...state,\n        currentBoard: action.data,\n      }\n    case Actions.UPDATE_CURRENT_USER:\n      console.log('current user ' + action.data)\n      return {\n        ...state,\n        currentUser: action.data,\n        isLoading: false,\n      }\n    case Actions.CREATE_CARD_FORM:\n      return {\n        ...state,\n        showCardForm: action.listId,\n      }\n    case Actions.HIDE_CARD_FORM:\n      return {\n        ...state,\n        showCardForm: false,\n      }\n    case Actions.CHANGE_TITLE:\n      return {\n        ...state,\n        title: action.title,\n      }\n    case Actions.CHANGE_ACTIVE_CARD_MODAL:\n      return {\n        ...state,\n        activeCardModal: state.activeCardModal ? null : action.id,\n      }\n    case Actions.EDIT_CARD_ATTRIBUTE:\n      console.log('decription ' + action.attribute)\n      return {\n        ...state,\n        cardAttributeContent: action.attribute,\n      }\n    case Actions.CHANGE_SHOW_BOARD_NAME_DISPLAY:\n      return {\n        ...state,\n        showBoardNameDisplay: state.showBoardNameDisplay ? false : true,\n      }\n    case Actions.SWITCH_TO_CARD_DESCRIPTION_FORM:\n      return {\n        ...state,\n        showCardDescriptionForm: true,\n        attributeType: 'description',\n      }\n    case Actions.SWITCH_TO_CARD_DESCRIPTION_DISPLAY:\n      return {\n        ...state,\n        showCardDescriptionForm: false,\n      }\n    case Actions.SWITCH_TO_CARD_TITLE_FORM:\n      return {\n        ...state,\n        showCardTitleForm: true,\n        attributeType: 'title',\n      }\n    case Actions.SWITCH_TO_CARD_TITLE_DISPLAY:\n      return {\n        ...state,\n        showCardTitleForm: false,\n      }\n    case Actions.TOGGLE_IS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case Actions.REDIRECT_AFTER_LOGOUT:\n      return {\n        ...state,\n        redirect: '/login',\n      }\n    case Actions.UPDATE_USER_LIST:\n      return {\n        ...state,\n        userList: action.users,\n      }\n    case Actions.SELECT_MEMBER_FROM_DROPDOWN:\n      return {\n        ...state,\n        attributeType: 'member',\n        cardAttributeContent: action.member,\n      }\n    case Actions.DISPLAY_DUPLICATE_MEMBER_WARNING:\n      return {\n        ...state,\n        showDuplicateMemberWarning: true,\n      }\n    case Actions.CLOSE_DUPLICATE_MEMBER_WARNING:\n      return {\n        ...state,\n        showDuplicateMemberWarning: false,\n      }\n    case Actions.UPDATE_ACTIVE_BOARD_LISTS:\n      console.log('lists ' + JSON.stringify(action.lists))\n      return {\n        ...state,\n        activeBoardLists: action.lists,\n      }\n    case Actions.SET_CURRENT_LIST_AND_CARD:\n      return {\n        ...state,\n        currentList: action.listAndCard.currentList,\n        currentCard: action.listAndCard.currentCard,\n      }\n    case Actions.SHOW_ADD_ITEM_FORM:\n      return {\n        ...state,\n        showChecklistItemForm: action.checklistId,\n        attributeType: 'checklist-item',\n      }\n    case Actions.HIDE_ADD_ITEM_FORM:\n      return {\n        ...state,\n        showChecklistItemForm: false,\n      }\n    case Actions.DISPLAY_CHECKLIST_TITLE_FORM:\n      return {\n        ...state,\n        showChecklistTitleForm: action.checklistId,\n        attributeType: 'title',\n      }\n    case Actions.HIDE_CHECKLIST_TITLE_FORM:\n      return {\n        ...state,\n        showChecklistTitleForm: false,\n      }\n    case Actions.OPEN_MEMBER_DROPDOWN:\n      return {\n        ...state,\n        showAddMemberDropdown: state.showAddMemberDropdown ? false : true,\n      }\n    case Actions.ACTIVATE_MEMBER_LIST_DROPDOWN:\n      return {\n        ...state,\n        showMemberListDropdown: state.showMemberListDropdown ? false : true,\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\n\nimport { djello } from '../reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  blacklist: [\n    'redirect',\n    'loading',\n    'showCardForm',\n    'activeCardModal',\n    'showCardDescriptionForm',\n  ],\n}\n\nconst persistedReducer = persistReducer(persistConfig, djello)\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport let store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n)\nexport let persistor = persistStore(store)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Register = ({ onSubmit, onUsernameChange, onPasswordChange }) => {\n  return (\n    <div className=\"tile is-ancestor is-4\" id=\"register\">\n      <div className=\"card is-4 form-card has-background-grey-lighter\">\n        <div className=\"form-header is-size-4\">Create a New Account</div>\n        <form onSubmit={onSubmit} className=\"card-content\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"username\"\n                type=\"email\"\n                placeholder=\"Username\"\n                onChange={onUsernameChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-footer\">\n            Already have an account? <Link to=\"/login\">Log In here!</Link>\n          </div>\n\n          <div className=\"control\">\n            <button className=\"button is-primary is-light is-fullwidth\">\n              Sign Up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Register from '../components/Register'\nimport {\n  handleUsernameInputChange,\n  handlePasswordInputChange,\n  handleSubmit,\n} from '../actions'\nimport { Redirect } from 'react-router-dom'\n\nclass RegisterContainer extends Component {\n  render() {\n    const {\n      onUsernameChange,\n      onPasswordChange,\n      onSubmit,\n      redirect,\n      currentUser,\n    } = this.props\n    if (redirect === `/${currentUser.username}`) {\n      return <Redirect to={`/${currentUser.username}`} />\n    }\n    return (\n      <Register\n        onUsernameChange={onUsernameChange}\n        onPasswordChange={onPasswordChange}\n        onSubmit={onSubmit}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.redirect,\n    currentUser: state.currentUser,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUsernameChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handleUsernameInputChange(data))\n    },\n\n    onPasswordChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handlePasswordInputChange(data))\n    },\n\n    onSubmit: e => {\n      dispatch(handleSubmit(e, '/register'))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Login = ({ onSubmit, onUsernameChange, onPasswordChange, redirect }) => {\n  return (\n    <div className=\"tile is-ancestor is-4\" id=\"login\">\n      <div className=\"card is-4 form-card has-background-grey-lighter\">\n        <div className=\"form-header is-size-4\">Sign In</div>\n        <form onSubmit={onSubmit} className=\"card-content\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"username\"\n                type=\"email\"\n                placeholder=\"Username\"\n                onChange={onUsernameChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-footer\">\n            Don't have an account yet? <Link to=\"/register\">Register</Link> now.\n          </div>\n\n          <div className=\"control\">\n            <button className=\"button is-primary is-light is-fullwidth\">\n              Sign In\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Login from '../components/Login'\nimport {\n  handleUsernameInputChange,\n  handlePasswordInputChange,\n  handleSubmit,\n} from '../actions'\nimport { Redirect } from 'react-router-dom'\n\nclass LoginContainer extends Component {\n  render() {\n    const {\n      onUsernameChange,\n      onPasswordChange,\n      onSubmit,\n      redirect,\n      currentUser,\n    } = this.props\n\n    console.log(redirect)\n\n    if (redirect === `/${currentUser.username}`) {\n      return <Redirect to={`/${currentUser.username}`} />\n    }\n    return (\n      <Login\n        onUsernameChange={onUsernameChange}\n        onPasswordChange={onPasswordChange}\n        onSubmit={onSubmit}\n        redirect={redirect}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.redirect,\n    currentUser: state.currentUser,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUsernameChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handleUsernameInputChange(data))\n    },\n\n    onPasswordChange: e => {\n      let data = e.target.value\n      console.log(data)\n      dispatch(handlePasswordInputChange(data))\n    },\n\n    onSubmit: e => {\n      dispatch(handleSubmit(e, '/login'))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\n","import React from 'react'\n\nconst CardDescriptionForm = ({\n  description,\n  handleCardAttributeEdit,\n  handleCardAttributeUpdate,\n  handleSwitchToCardDescriptionDisplay,\n  listId,\n  cardId,\n}) => {\n  return (\n    <form\n      className=\"card-description-form\"\n      onSubmit={handleCardAttributeUpdate}\n    >\n      <textarea\n        className=\"textarea\"\n        onChange={handleCardAttributeEdit}\n        defaultValue={description}\n      ></textarea>\n      <div id=\"card-modal-buttons\" className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" type=\"submit\">\n            Save\n          </button>\n          <button\n            className=\"button is-danger\"\n            onClick={handleSwitchToCardDescriptionDisplay}\n          >\n            Cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CardDescriptionForm\n","import React from 'react'\n\nconst CardDescriptionDisplay = ({\n  description,\n  handleSwitchToCardDescriptionForm,\n}) => {\n  return (\n    <div\n      className=\"card card-description-display\"\n      onClick={handleSwitchToCardDescriptionForm}\n    >\n      <div className=\"card-content\">{description}</div>\n    </div>\n  )\n}\n\nexport default CardDescriptionDisplay\n","import React from 'react'\n\nconst CardTitleForm = ({\n  title,\n  handleCardAttributeEdit,\n  handleCardAttributeUpdate,\n  handleSwitchToCardTitleDisplay,\n  listId,\n  cardId,\n}) => {\n  return (\n    <form onSubmit={handleCardAttributeUpdate}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        onChange={handleCardAttributeEdit}\n        defaultValue={title}\n      ></input>\n      <div id=\"card-modal-buttons\" className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" type=\"submit\">\n            Save\n          </button>\n          <button\n            className=\"button is-danger\"\n            onClick={handleSwitchToCardTitleDisplay}\n          >\n            Cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CardTitleForm\n","import React from 'react'\n\nconst CardTitleDisplay = ({ title, handleSwitchToCardTitleForm }) => {\n  return (\n    <div className=\"card-title-display\" onClick={handleSwitchToCardTitleForm}>\n      {title}\n    </div>\n  )\n}\n\nexport default CardTitleDisplay\n","import React from 'react'\n\nconst ChecklistItemForm = ({\n  handleCardAttributeEdit,\n  handleHideAddItemForm,\n  handleAddChecklistItem,\n}) => {\n  return (\n    <form className=\"checklist-item-form\" onSubmit={handleAddChecklistItem}>\n      <div>\n        <a\n          className=\"hide-add-item-form delete is-medium\"\n          onClick={handleHideAddItemForm}\n        ></a>\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={handleCardAttributeEdit}\n        />\n      </div>\n      <button className=\"button\" type=\"submit\">\n        Add\n      </button>\n    </form>\n  )\n}\n\nexport default ChecklistItemForm\n","import React from 'react'\n\nconst ChecklistTitleForm = ({\n  title,\n  handleCardAttributeEdit,\n  handleHideChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  checklistId,\n  listId,\n  cardId,\n}) => {\n  return (\n    <form onSubmit={handleUpdateChecklistTitle}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        onChange={handleCardAttributeEdit}\n        defaultValue={title}\n      ></input>\n      <div id=\"checklist-title-buttons\" className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" type=\"submit\">\n            Save\n          </button>\n          <button\n            className=\"button is-danger\"\n            onClick={handleHideChecklistTitleForm}\n          >\n            Cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default ChecklistTitleForm\n","import React from 'react'\n\nconst ChecklistTitleDisplay = ({\n  title,\n  handleDisplayChecklistTitleForm,\n  handleDeleteChecklist,\n}) => {\n  return (\n    <div\n      className=\"checklist-title-display\"\n      onClick={handleDisplayChecklistTitleForm}\n    >\n      <p className=\"checklist-title\">{title}</p>\n      <div className=\"delete-checklist\">\n        <button\n          className=\"button is-small is-danger is-light\"\n          onClick={handleDeleteChecklist}\n        >\n          delete\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ChecklistTitleDisplay\n","import React from 'react'\nimport ChecklistItemForm from './ChecklistItemForm'\nimport ChecklistTitleForm from './ChecklistTitleForm'\nimport CheclistTitleDisplay from './ChecklistTitleDisplay'\n//import { showChecklistTitleForm } from '../actions'\nimport ChecklistTitleDisplay from './ChecklistTitleDisplay'\n\nconst Checklist = ({\n  items,\n  handleCheckItem,\n  handleShowAddItemForm,\n  handleHideAddItemForm,\n  showChecklistItemForm,\n  handleCardAttributeEdit,\n  handleAddChecklistItem,\n  handleDisplayChecklistTitleForm,\n  handleHideChecklistTitleForm,\n  cardId,\n  checklistId,\n  title,\n  showChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  handleDeleteChecklist,\n}) => {\n  let listItems = items.map(item => {\n    let labelClasses = item.checked\n      ? 'checklist-item-label checked'\n      : 'checklist-item-label'\n    return (\n      <div className=\"checklistItem\" id={item._id}>\n        <input\n          type=\"checkbox\"\n          value={item.content}\n          name={item.content}\n          onClick={handleCheckItem}\n        />\n        <label className={labelClasses} for={item.content}>\n          {' '}\n          {item.content}\n        </label>\n      </div>\n    )\n  })\n\n  let checkedItemLength = items.filter(item => {\n    return item.checked\n  }).length\n\n  let progressValue =\n    (checkedItemLength / items.length) * 100\n      ? (checkedItemLength / items.length) * 100\n      : 0\n\n  console.log(checkedItemLength)\n\n  let itemForm\n  if (showChecklistItemForm === checklistId) {\n    itemForm = (\n      <ChecklistItemForm\n        handleHideAddItemForm={handleHideAddItemForm}\n        handleCardAttributeEdit={handleCardAttributeEdit}\n        handleAddChecklistItem={handleAddChecklistItem}\n      />\n    )\n  } else {\n    itemForm = (\n      <button className=\"button is-light\" onClick={handleShowAddItemForm}>\n        Add an item\n      </button>\n    )\n  }\n  let checklistTitleComponent\n\n  if (showChecklistTitleForm === checklistId) {\n    checklistTitleComponent = (\n      <ChecklistTitleForm\n        title={title}\n        handleCardAttributeEdit={handleCardAttributeEdit}\n        handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n        handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n      />\n    )\n  } else {\n    checklistTitleComponent = (\n      <ChecklistTitleDisplay\n        title={title}\n        handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n        showChecklistTitleForm={showChecklistTitleForm}\n        handleDeleteChecklist={handleDeleteChecklist}\n      />\n    )\n  }\n  return (\n    <div id={checklistId} className=\"checklist content\">\n      {checklistTitleComponent}\n      <span>{progressValue}%</span>\n      <progress\n        class=\"progress is-primary is-small\"\n        value={progressValue}\n        max=\"100\"\n      >\n        {progressValue}%\n      </progress>\n      {listItems}\n\n      {itemForm}\n    </div>\n  )\n}\n\nexport default Checklist\n","import React from 'react'\nimport CardDescriptionForm from './CardDescriptionForm'\nimport CardDescriptionDisplay from './CardDescriptionDisplay'\nimport CardTitleForm from './CardTitleForm'\nimport CardTitleDisplay from './CardTitleDisplay'\nimport MemberSelectionDropdown from './MemberSelectionDropdown'\nimport Checklist from './Checklist'\n\nconst CardModal = ({\n  currentUser,\n  attributeContent,\n  members,\n  classes,\n  handleActiveCardModal,\n  cardId,\n  handleDeleteCard,\n  listId,\n  listName,\n  handleCardAttributeEdit,\n  handleCardAttributeUpdate,\n  handleSwitchToCardDescriptionForm,\n  handleSwitchToCardDescriptionDisplay,\n  handleSwitchToCardTitleForm,\n  handleSwitchToCardTitleDisplay,\n  showCardDescriptionForm,\n  showCardTitleForm,\n  isLoading,\n  handleSelectMemberFromDropdown,\n  showDuplicateMemberWarning,\n  handleCloseDuplicateMemberWarning,\n  handleDeleteMemberFromCard,\n  lists,\n  currentList,\n  currentCard,\n  handleShowAddItemForm,\n  handleHideAddItemForm,\n  showChecklistItemForm,\n  handleCreateChecklist,\n  handleAddChecklistItem,\n  handleCheckItem,\n  handleDisplayChecklistTitleForm,\n  handleHideChecklistTitleForm,\n  showChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  handleDeleteChecklist,\n  handleOpenAddMemberDropdown,\n  showAddMemberDropdown,\n  handleActivateMemberListDropdown,\n  showMemberListDropdown,\n}) => {\n  console.log('listId ' + listId)\n  console.log('carId ' + cardId)\n  let currentBoard = currentUser.boards.filter(board => {\n    return JSON.stringify(board._id) === JSON.stringify(currentUser.activeBoard)\n  })[0]\n\n  console.log('currentBoard ' + JSON.stringify(currentBoard))\n\n  //let currentList\n  //let currentCard\n  let cardActivity\n  let descriptionForm\n  let descriptionDisplay\n  let titleForm\n  let titleDisplay\n  let descriptionComponent\n  let titleComponent\n  let addedMembersList\n  let checklists\n  let memberList\n\n  console.log(currentList)\n\n  // currentCard = currentList.cards.filter(listCard => {\n  //   return JSON.stringify(listCard._id) === JSON.stringify(cardId)\n  // })[0]\n\n  if (currentCard.activity) {\n    cardActivity = currentCard.activity.map(action => {\n      return <li key={action}>{action}</li>\n    })\n  }\n\n  if (currentCard.checklists) {\n    checklists = currentCard.checklists.map(checklist => {\n      return (\n        <Checklist\n          items={checklist.items}\n          handleShowAddItemForm={handleShowAddItemForm}\n          handleHideAddItemForm={handleHideAddItemForm}\n          showChecklistItemForm={showChecklistItemForm}\n          handleCardAttributeEdit={handleCardAttributeEdit}\n          handleAddChecklistItem={handleAddChecklistItem}\n          handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n          handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n          cardId={cardId}\n          checklistId={checklist._id}\n          handleCheckItem={handleCheckItem}\n          title={checklist.title}\n          showChecklistTitleForm={showChecklistTitleForm}\n          handleCheckItem={handleCheckItem}\n          handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n          handleDeleteChecklist={handleDeleteChecklist}\n        />\n      )\n    })\n  }\n  descriptionForm = (\n    <CardDescriptionForm\n      description={currentCard.description}\n      handleCardAttributeEdit={handleCardAttributeEdit}\n      handleCardAttributeUpdate={handleCardAttributeUpdate}\n      handleSwitchToCardDescriptionDisplay={\n        handleSwitchToCardDescriptionDisplay\n      }\n      listName={listId}\n      cardId={cardId}\n    />\n  )\n  descriptionDisplay = (\n    <CardDescriptionDisplay\n      description={isLoading ? attributeContent : currentCard.description}\n      handleSwitchToCardDescriptionForm={handleSwitchToCardDescriptionForm}\n    />\n  )\n  titleForm = (\n    <CardTitleForm\n      title={currentCard.title}\n      handleCardAttributeEdit={handleCardAttributeEdit}\n      handleCardAttributeUpdate={handleCardAttributeUpdate}\n      handleSwitchToCardTitleDisplay={handleSwitchToCardTitleDisplay}\n    />\n  )\n\n  titleDisplay = (\n    <CardTitleDisplay\n      title={isLoading ? attributeContent : currentCard.title}\n      handleSwitchToCardTitleForm={handleSwitchToCardTitleForm}\n    />\n  )\n\n  descriptionComponent = showCardDescriptionForm\n    ? descriptionForm\n    : descriptionDisplay\n\n  addedMembersList = currentCard.members.map(member => {\n    return (\n      <li className=\"member\" key={member}>\n        <div className=\"member-username\">{member}</div>\n        <a className=\"remove-link\" onClick={handleDeleteMemberFromCard}>\n          remove\n        </a>\n      </li>\n    )\n  })\n\n  if (members) {\n    memberList = members.map(member => {\n      return (\n        <a\n          href=\"#\"\n          className=\"dropdown-item\"\n          onClick={handleSelectMemberFromDropdown}\n          key={member._id}\n        >\n          {member.username}\n        </a>\n      )\n    })\n  }\n  titleComponent = showCardTitleForm ? titleForm : titleDisplay\n  //})\n\n  let notificationClasses = showDuplicateMemberWarning\n    ? 'notification is-danger is-light'\n    : 'notification is-danger is-light hidden'\n\n  let checklistsHeading\n  checklistsHeading =\n    currentCard.checklists.length > 0 ? (\n      <p className=\"is-size-4\">Checklists</p>\n    ) : null\n\n  let memberDropdown\n\n  console.log(showAddMemberDropdown)\n\n  let memberDropdownClasses = showAddMemberDropdown\n    ? 'dropdown member-dropdown is-right is-active'\n    : 'dropdown member-dropdown is-right'\n\n  return (\n    <div id={cardId} className={classes}>\n      <span id={listId}></span>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <div className=\"modal-card-head\">\n          <div className=\"modal-card-title\">\n            {titleComponent}\n            <p className=\"in-list is-size-6\">In list {listName}</p>\n          </div>\n\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={handleActiveCardModal}\n          ></button>\n        </div>\n\n        <div className=\"modal-card-body\">\n          <div className=\"actions\">\n            <p className=\"is-size-4\">Add</p>\n            <button\n              className=\"button is-fullwidth is-light\"\n              onClick={handleCreateChecklist}\n            >\n              <span className=\"icon action-button-icon is-small\">\n                <i class=\"far fa-check-square\"></i>\n              </span>\n              <span>Checklist</span>\n            </button>\n            <div class={memberDropdownClasses}>\n              <div\n                class=\"dropdown-trigger member-dropdown-trigger\"\n                onClick={handleOpenAddMemberDropdown}\n              >\n                <button\n                  className=\"button is-fullwidth is-light\"\n                  aria-haspopup=\"true\"\n                  aria-controls=\"dropdown-menu2\"\n                >\n                  <span className=\"icon action-button-icon is-small\">\n                    <i class=\"fas fa-user-plus\"></i>\n                  </span>\n                  <span>Member</span>\n                </button>\n              </div>\n              <div class=\"dropdown-menu\" id=\"dropdown-menu2\" role=\"menu\">\n                <div class=\"dropdown-content\">\n                  {memberList}\n                  {/* <div class=\"dropdown-item\"> */}\n                  {/* <MemberSelectionDropdown\n                    members={members}\n                    handleSelectMemberFromDropdown={\n                      handleSelectMemberFromDropdown\n                    }\n                    handleCardAttributeUpdate={handleCardAttributeUpdate}\n                    handleActivateMemberListDropdown={\n                      handleActivateMemberListDropdown\n                    }\n                    showMemberListDropdown={showMemberListDropdown}\n                  /> */}\n                  {/* </div> */}\n                </div>\n              </div>\n            </div>\n            <button className=\"button is-fullwidth is-light\">\n              <span className=\"icon action-button-icon is-small\">\n                <i class=\"fas fa-paperclip\"></i>\n              </span>\n              <span>Attachment</span>\n            </button>\n          </div>\n          <button\n            className=\"button is-link is-light is-outlined mark-as-complete\"\n            onClick={handleDeleteCard}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-check\"></i>\n            </span>\n            <span>Mark as Complete</span>\n          </button>\n          <p className=\"is-size-4\">Description</p>\n          {descriptionComponent}\n          {checklistsHeading}\n          {checklists}\n          <div className=\"members\">\n            <p className=\"is-size-4\">Members</p>\n            <div className={notificationClasses}>\n              <button\n                className=\"delete\"\n                onClick={handleCloseDuplicateMemberWarning}\n              ></button>\n              Member already added to card!\n            </div>\n            {/* <MemberSelectionDropdown\n              members={members}\n              handleSelectMemberFromDropdown={handleSelectMemberFromDropdown}\n              handleCardAttributeUpdate={handleCardAttributeUpdate}\n            /> */}\n          </div>\n          <div className=\"content addedMembersList-container\">\n            <ul className=\"addedMembersList\">{addedMembersList}</ul>\n          </div>\n          <div className=\"modal-card-footer\">\n            <p className=\"is-size-4\">Activity</p>\n            <div className=\"content\">\n              <ul>{cardActivity}</ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardModal\n","import React from 'react'\n\nconst CardMemberList = ({ members }) => {\n  return (\n    <div className=\"dropdown is-hoverable\">\n      <div className=\"dropdown-trigger\">\n        <span\n          className=\"tag is-link is-light\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n        >\n          Members\n        </span>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {members.length > 0 ? members : 'no members yet'}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardMemberList\n","import React from 'react'\nimport CardModal from './CardModal'\nimport CardMemberList from './CardMemberList'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { is } from 'bluebird'\n\nconst Card = ({\n  currentUser,\n  attributeContent,\n  activeCardModal,\n  handleActiveCardModal,\n  cardId,\n  handleDeleteCard,\n  listId,\n  listName,\n  handleCardAttributeEdit,\n  handleCardAttributeUpdate,\n  handleSwitchToCardDescriptionForm,\n  handleSwitchToCardDescriptionDisplay,\n  handleSwitchToCardTitleForm,\n  handleSwitchToCardTitleDisplay,\n  showCardDescriptionForm,\n  showCardTitleForm,\n  isLoading,\n  title,\n  userList,\n  handleSelectMemberFromDropdown,\n  showDuplicateMemberWarning,\n  handleCloseDuplicateMemberWarning,\n  handleDeleteMemberFromCard,\n  index,\n  lists,\n  currentList,\n  //currentCard,\n  handleShowAddItemForm,\n  handleHideAddItemForm,\n  showChecklistItemForm,\n  handleCreateChecklist,\n  handleAddChecklistItem,\n  handleCheckItem,\n  handleDisplayChecklistTitleForm,\n  handleHideChecklistTitleForm,\n  showChecklistTitleForm,\n  handleUpdateChecklistTitle,\n  handleDeleteChecklist,\n  handleOpenAddMemberDropdown,\n  showAddMemberDropdown,\n  handleActivateMemberListDropdown,\n  showMemberListDropdown,\n}) => {\n  let classes\n  if (activeCardModal === cardId) {\n    classes = `modal is-active is clipped ${cardId}`\n  } else {\n    classes = `modal ${cardId}`\n  }\n\n  let currentBoard = currentUser.boards.filter(board => {\n    return JSON.stringify(board._id) === JSON.stringify(currentUser.activeBoard)\n  })[0]\n\n  //console.log('current card ' + currentCard)\n\n  console.log('currentBoard ' + JSON.stringify(currentBoard))\n  console.log('lists ' + JSON.stringify(lists[0]._id))\n  console.log('listId ' + JSON.stringify(listId))\n\n  let membersList\n\n  console.log(JSON.stringify(currentList))\n\n  let currentCard = currentList.cards.filter(listCard => {\n    return JSON.stringify(listCard._id) === JSON.stringify(cardId)\n  })[0]\n\n  if (currentCard.members) {\n    membersList = currentCard.members.map(member => {\n      return (\n        <div className=\"member\" key={member}>\n          {member}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Draggable draggableId={cardId} index={index}>\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          provided={provided}\n          ref={provided.innerRef}\n        >\n          <div\n            id={cardId}\n            className={snapshot.isDragging ? 'card is-dragging' : 'card'}\n            data-target={cardId}\n            aria-haspopup=\"true\"\n            onClick={handleActiveCardModal}\n          >\n            <CardMemberList members={membersList} />\n            <div className=\"card-content task is-hovered\">{title}</div>\n          </div>\n          <CardModal\n            currentUser={currentUser}\n            cardId={cardId}\n            attributeContent={attributeContent}\n            classes={classes}\n            handleActiveCardModal={handleActiveCardModal}\n            handleDeleteCard={handleDeleteCard}\n            listId={listId}\n            listName={listName}\n            handleCardAttributeEdit={handleCardAttributeEdit}\n            handleCardAttributeUpdate={handleCardAttributeUpdate}\n            handleSwitchToCardDescriptionForm={\n              handleSwitchToCardDescriptionForm\n            }\n            showCardDescriptionForm={showCardDescriptionForm}\n            handleSwitchToCardDescriptionDisplay={\n              handleSwitchToCardDescriptionDisplay\n            }\n            handleSwitchToCardTitleForm={handleSwitchToCardTitleForm}\n            handleSwitchToCardTitleDisplay={handleSwitchToCardTitleDisplay}\n            showCardTitleForm={showCardTitleForm}\n            isLoading={isLoading}\n            members={userList}\n            handleSelectMemberFromDropdown={handleSelectMemberFromDropdown}\n            showDuplicateMemberWarning={showDuplicateMemberWarning}\n            handleCloseDuplicateMemberWarning={\n              handleCloseDuplicateMemberWarning\n            }\n            handleDeleteMemberFromCard={handleDeleteMemberFromCard}\n            lists={lists}\n            currentList={currentList}\n            currentCard={currentCard}\n            handleShowAddItemForm={handleShowAddItemForm}\n            handleHideAddItemForm={handleHideAddItemForm}\n            showChecklistItemForm={showChecklistItemForm}\n            handleCreateChecklist={handleCreateChecklist}\n            handleAddChecklistItem={handleAddChecklistItem}\n            handleCheckItem={handleCheckItem}\n            handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n            handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n            showChecklistTitleForm={showChecklistTitleForm}\n            handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n            handleDeleteChecklist={handleDeleteChecklist}\n            handleOpenAddMemberDropdown={handleOpenAddMemberDropdown}\n            showAddMemberDropdown={showAddMemberDropdown}\n            handleActivateMemberListDropdown={handleActivateMemberListDropdown}\n            showMemberListDropdown={showMemberListDropdown}\n          />\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Card from '../components/Card'\nimport {\n  changeActiveCardModal,\n  deleteCard,\n  editCardAttribute,\n  updateCardAttribute,\n  switchToCardDescriptionForm,\n  switchToCardDescriptionDisplay,\n  switchToCardDTitleForm,\n  switchToCardTItleDisplay,\n  getAllUsers,\n  selectMemberFromDropdown,\n  closeDuplicateMemberWarning,\n  deleteMemberFromCard,\n  setCurrentListAndCard,\n  showAddItemForm,\n  hideAddItemForm,\n  createChecklist,\n  addChecklistItem,\n  checkChecklistItem,\n  HideChecklistTitleForm,\n  displayChecklistTitleForm,\n  updateChecklistTitle,\n  deleteChecklist,\n  openMemberDropdown,\n  activateMemberListDropdown,\n} from '../actions'\n\nclass CardContainer extends Component {\n  render() {\n    const {\n      currentUser,\n      attributeContent,\n      activeCardModal,\n      handleActiveCardModal,\n      cardId,\n      handleDeleteCard,\n      listId,\n      listName,\n      handleCardAttributeEdit,\n      handleCardAttributeUpdate,\n      handleSwitchToCardDescriptionForm,\n      handleSwitchToCardDescriptionDisplay,\n      showCardDescriptionForm,\n      handleSwitchToCardTitleForm,\n      handleSwitchToCardTitleDisplay,\n      showCardTitleForm,\n      isLoading,\n      title,\n      userList,\n      handleSelectMemberFromDropdown,\n      showDuplicateMemberWarning,\n      handleCloseDuplicateMemberWarning,\n      handleDeleteMemberFromCard,\n      index,\n      lists,\n      currentList,\n      currentCard,\n      handleShowAddItemForm,\n      handleHideAddItemForm,\n      showChecklistItemForm,\n      handleCreateChecklist,\n      handleAddChecklistItem,\n      handleCheckItem,\n      handleDisplayChecklistTitleForm,\n      handleHideChecklistTitleForm,\n      showChecklistTitleForm,\n      handleUpdateChecklistTitle,\n      handleDeleteChecklist,\n      handleOpenAddMemberDropdown,\n      showAddMemberDropdown,\n      handleActivateMemberListDropdown,\n      ShowMemberListDropdown,\n    } = this.props\n    console.log(activeCardModal)\n    return (\n      <Card\n        currentUser={currentUser}\n        attributeContent={attributeContent}\n        activeCardModal={activeCardModal}\n        handleActiveCardModal={handleActiveCardModal}\n        cardId={cardId}\n        handleDeleteCard={handleDeleteCard}\n        listId={listId}\n        listName={listName}\n        handleCardAttributeEdit={handleCardAttributeEdit}\n        handleCardAttributeUpdate={handleCardAttributeUpdate}\n        handleSwitchToCardDescriptionForm={handleSwitchToCardDescriptionForm}\n        handleSwitchToCardDescriptionDisplay={\n          handleSwitchToCardDescriptionDisplay\n        }\n        handleSwitchToCardTitleForm={handleSwitchToCardTitleForm}\n        handleSwitchToCardTitleDisplay={handleSwitchToCardTitleDisplay}\n        showCardDescriptionForm={showCardDescriptionForm}\n        showCardTitleForm={showCardTitleForm}\n        isLoading={isLoading}\n        title={title}\n        userList={userList}\n        handleSelectMemberFromDropdown={handleSelectMemberFromDropdown}\n        showDuplicateMemberWarning={showDuplicateMemberWarning}\n        handleCloseDuplicateMemberWarning={handleCloseDuplicateMemberWarning}\n        handleDeleteMemberFromCard={handleDeleteMemberFromCard}\n        index={index}\n        lists={lists}\n        currentList={currentList}\n        currentCard={currentCard}\n        handleShowAddItemForm={handleShowAddItemForm}\n        handleHideAddItemForm={handleHideAddItemForm}\n        showChecklistItemForm={showChecklistItemForm}\n        handleCreateChecklist={handleCreateChecklist}\n        handleAddChecklistItem={handleAddChecklistItem}\n        handleCheckItem={handleCheckItem}\n        handleDisplayChecklistTitleForm={handleDisplayChecklistTitleForm}\n        handleHideChecklistTitleForm={handleHideChecklistTitleForm}\n        showChecklistTitleForm={showChecklistTitleForm}\n        handleUpdateChecklistTitle={handleUpdateChecklistTitle}\n        handleDeleteChecklist={handleDeleteChecklist}\n        handleOpenAddMemberDropdown={handleOpenAddMemberDropdown}\n        showAddMemberDropdown={showAddMemberDropdown}\n        handleActivateMemberListDropdown={handleActivateMemberListDropdown}\n        ShowMemberListDropdown={ShowMemberListDropdown}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let currentList\n  // let currentCard\n  return {\n    currentUser: state.currentUser,\n    title: ownProps.title,\n    cardId: ownProps.cardId,\n    activeCardModal: state.activeCardModal,\n    listId: ownProps.listId,\n    listName: ownProps.listName,\n    showCardDescriptionForm: state.showCardDescriptionForm,\n    showCardTitleForm: state.showCardTitleForm,\n    attributeContent: state.attributeContent,\n    isLoading: state.isLoading,\n    userList: state.userList,\n    showDuplicateMemberWarning: state.showDuplicateMemberWarning,\n    index: ownProps.index,\n    lists: state.activeBoardLists,\n    currentList: (currentList = state.activeBoardLists.filter(boardList => {\n      return JSON.stringify(boardList._id) === JSON.stringify(ownProps.listId)\n    })[0]),\n    showChecklistItemForm: state.showChecklistItemForm,\n    showChecklistTitleForm: state.showChecklistTitleForm,\n    showAddMemberDropdown: state.showAddMemberDropdown,\n    showMemberListDropdown: state.showMemberListDropdown,\n    // currentCard: currentList.cards.filter(listCard => {\n    //   return JSON.stringify(listCard._id) === JSON.stringify(ownProps.cardId)\n    // })[0],\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleActiveCardModal: e => {\n      let id = e.target.parentElement.id\n      dispatch(changeActiveCardModal(id))\n      dispatch(getAllUsers())\n    },\n\n    handleDeleteCard: e => {\n      let cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement.id\n      let listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id\n      dispatch(deleteCard(cardId, listId))\n      dispatch(changeActiveCardModal())\n    },\n\n    handleCardAttributeUpdate: e => {\n      e.preventDefault()\n      console.log(\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id,\n      )\n      dispatch(updateCardAttribute(e))\n    },\n\n    handleSwitchToCardDescriptionForm: () => {\n      dispatch(switchToCardDescriptionForm())\n    },\n\n    handleSwitchToCardDescriptionDisplay: () => {\n      dispatch(switchToCardDescriptionDisplay())\n    },\n\n    handleCardAttributeEdit: e => {\n      let attribute = e.target.value\n      dispatch(editCardAttribute(attribute))\n    },\n\n    handleSwitchToCardTitleForm: () => {\n      dispatch(switchToCardDTitleForm())\n    },\n\n    handleSwitchToCardTitleDisplay: () => {\n      dispatch(switchToCardTItleDisplay())\n    },\n\n    handleSelectMemberFromDropdown: e => {\n      let member = e.target.innerHTML\n      //document.getElementById('dropdown-selection').innerHTML = member\n      dispatch(selectMemberFromDropdown(member))\n      dispatch(updateCardAttribute(e))\n    },\n\n    handleCloseDuplicateMemberWarning: () => {\n      dispatch(closeDuplicateMemberWarning())\n    },\n\n    handleDeleteMemberFromCard: e => {\n      dispatch(deleteMemberFromCard(e))\n    },\n\n    handleShowAddItemForm: e => {\n      let checklistId = e.target.parentElement.id\n      dispatch(showAddItemForm(checklistId))\n    },\n\n    handleHideAddItemForm: () => {\n      dispatch(hideAddItemForm())\n    },\n\n    handleCreateChecklist: e => {\n      console.log(\n        e.target.parentElement.parentElement.parentElement.parentElement.id,\n      )\n      let cardId =\n        e.target.parentElement.parentElement.parentElement.parentElement.id\n      let listId =\n        e.target.parentElement.parentElement.parentElement.parentElement\n          .firstChild.id\n      dispatch(createChecklist(e, listId, cardId))\n    },\n\n    handleAddChecklistItem: e => {\n      e.preventDefault()\n      dispatch(addChecklistItem(e))\n      dispatch(hideAddItemForm())\n    },\n\n    handleCheckItem: e => {\n      console.log(e.target.parentElement.id)\n      dispatch(checkChecklistItem(e))\n    },\n\n    handleDisplayChecklistTitleForm: e => {\n      console.log(e.target.parentElement.id)\n      let checklistId = e.target.parentElement.id\n      dispatch(displayChecklistTitleForm(checklistId))\n    },\n\n    handleHideChecklistTitleForm: e => {\n      e.preventDefault()\n      dispatch(HideChecklistTitleForm())\n    },\n\n    handleUpdateChecklistTitle: e => {\n      e.preventDefault()\n      dispatch(HideChecklistTitleForm())\n      dispatch(updateChecklistTitle(e))\n    },\n\n    handleDeleteChecklist: e => {\n      e.preventDefault()\n      console.log(e.target.parentElement.parentElement.parentElement.id)\n      dispatch(deleteChecklist(e))\n    },\n\n    handleOpenAddMemberDropdown: () => {\n      dispatch(openMemberDropdown())\n    },\n\n    handleActivateMemberListDropdown: () => {\n      dispatch(activateMemberListDropdown())\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardContainer)\n","import React from 'react'\n\nconst CardForm = ({\n  handleSaveCard,\n  handleHideCardForm,\n  handleTitleChange,\n}) => {\n  return (\n    <form onSubmit={handleSaveCard}>\n      <textarea className=\"textarea\" onChange={handleTitleChange}></textarea>\n      <div className=\"field is-grouped\" id=\"cardForm-buttons\">\n        <p className=\"control\">\n          <button className=\"button is-primary is-light\" type=\"submit\">\n            save\n          </button>\n        </p>\n        <p className=\"control\">\n          <button\n            className=\"button is-danger is-light\"\n            onClick={handleHideCardForm}\n          >\n            cancel\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CardForm\n","import React from 'react'\nimport CardContainer from '../containers/CardContainer'\nimport CardForm from './CardForm'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst List = ({\n  currentUser,\n  id,\n  deleteList,\n  handleListNameChange,\n  handleSaveCard,\n  handleShowCardForm,\n  handleHideCardForm,\n  showCardForm,\n  handleTitleChange,\n  lists,\n}) => {\n  let currentBoard = currentUser.boards.filter(board => {\n    return board._id === currentUser.activeBoard\n  })\n\n  console.log(currentBoard)\n  console.log('list lists ' + JSON.stringify(lists))\n\n  let currentList = lists.filter(list => {\n    return id === list._id\n  })\n\n  console.log(currentList)\n  let cardComponents\n  let cardForm\n  let name = currentList[0].name\n  let cards = currentList[0].cards\n\n  if (cards) {\n    cardComponents = cards.map((card, index) => {\n      return (\n        <CardContainer\n          title={card.title}\n          cardId={card._id}\n          listId={id}\n          listName={currentList[0].name}\n          key={card._id}\n          index={index}\n        />\n      )\n    })\n  }\n\n  if (showCardForm === id) {\n    cardForm = (\n      <CardForm\n        handleSaveCard={handleSaveCard}\n        handleHideCardForm={handleHideCardForm}\n        handleTitleChange={handleTitleChange}\n      />\n    )\n  } else {\n    cardForm = null\n  }\n\n  return (\n    <Droppable droppableId={id}>\n      {(provided, snapshot) => (\n        <div\n          provided={provided}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          className={\n            snapshot.isDraggingOver\n              ? 'list tile is-2 is-vertical is-parent notification is-dragging-over'\n              : 'list tile is-2 is-vertical is-parent notification is-light'\n          }\n        >\n          <a className=\"delete-list delete is-medium\" onClick={deleteList}></a>\n          <div id={id}>\n            <div className=\"list-name is-size-5\">\n              <input\n                id=\"list-name\"\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Enter List Name\"\n                defaultValue={name}\n                onBlur={handleListNameChange}\n              />\n            </div>\n\n            {cardComponents}\n            {provided.placeholder}\n\n            {cardForm}\n            <button\n              className=\"button is-primary is-light is-fullwidth\"\n              onClick={handleShowCardForm}\n            >\n              + Add Card\n            </button>\n          </div>\n        </div>\n      )}\n    </Droppable>\n  )\n}\n\nexport default List\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport List from '../components/List'\nimport {\n  deleteList,\n  changeName,\n  createCardForm,\n  saveCard,\n  hideCardForm,\n  changeTitle,\n} from '../actions'\n\nclass ListContainer extends Component {\n  render() {\n    const {\n      id,\n      deleteList,\n      handleListNameChange,\n      currentUser,\n      handleSaveCard,\n      handleShowCardForm,\n      handleHideCardForm,\n      showCardForm,\n      handleTitleChange,\n      lists,\n    } = this.props\n    return (\n      <List\n        id={id}\n        deleteList={deleteList}\n        handleListNameChange={handleListNameChange}\n        currentUser={currentUser}\n        handleSaveCard={handleSaveCard}\n        handleShowCardForm={handleShowCardForm}\n        handleHideCardForm={handleHideCardForm}\n        showCardForm={showCardForm}\n        handleTitleChange={handleTitleChange}\n        lists={lists}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    id: ownProps.id,\n    currentUser: state.currentUser,\n    showCardForm: state.showCardForm,\n    lists: state.activeBoardLists,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: e => {\n      dispatch(deleteList(e))\n    },\n\n    handleListNameChange: e => {\n      let componentName = e.target.value\n      dispatch(changeName(e, componentName, '/changeListName'))\n    },\n\n    handleShowCardForm: e => {\n      let listId = e.target.parentElement.id\n      dispatch(createCardForm(listId))\n    },\n\n    handleHideCardForm: e => {\n      dispatch(hideCardForm())\n    },\n\n    handleSaveCard: e => {\n      dispatch(saveCard(e))\n    },\n\n    handleTitleChange: e => {\n      let title = e.target.value\n      console.log(title)\n      dispatch(changeTitle(title))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer)\n","import React from 'react'\nimport ListContainer from '../containers/ListContainer'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nconst Board = ({\n  handleClick,\n  name,\n  lists,\n  handleBoardNameChange,\n  currentUser,\n  showBoardNameDisplay,\n  handleHideBoardNameDisplay,\n  handleOnDragEnd,\n}) => {\n  let boardLists\n  if (lists) {\n    boardLists = lists.map(list => {\n      return <ListContainer id={list._id} key={list._id} />\n    })\n  }\n\n  let activeBoard = currentUser.boards.filter(board => {\n    return JSON.stringify(board._id) === JSON.stringify(currentUser.activeBoard)\n  })\n\n  console.log('name display ' + showBoardNameDisplay)\n\n  let boardNameDisplayClasses = showBoardNameDisplay\n    ? 'board-name-display'\n    : 'board-name-display hidden'\n\n  let boardNameInputClasses = showBoardNameDisplay\n    ? 'input is-large has-text-dark has-background-white-bis hidden'\n    : 'input is-large has-text-dark has-background-white-bis'\n\n  console.log('active board ' + JSON.stringify(activeBoard[0].name))\n  return (\n    <div className=\"board\">\n      <div className=\"is-size-4 board-name\">\n        <div>\n          <input\n            id=\"board-name\"\n            className={boardNameInputClasses}\n            type=\"text\"\n            onBlur={handleBoardNameChange}\n            defaultValue={activeBoard[0].name}\n            placeholder={showBoardNameDisplay ? 'Enter Board Name...' : ''}\n          />\n        </div>\n        <div\n          className={boardNameDisplayClasses}\n          onClick={handleHideBoardNameDisplay}\n        >\n          {activeBoard[0].name ? activeBoard[0].name : 'Enter Board Name...'}\n        </div>\n      </div>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        {boardLists}\n      </DragDropContext>\n      <button\n        className=\"button add-list is-light is-large is-outlined is-primary\"\n        onClick={handleClick}\n      >\n        Add A List...\n      </button>\n    </div>\n  )\n}\n\nexport default Board\n","import React, { Component } from 'react'\nimport Board from '../components/Board'\nimport { connect } from 'react-redux'\nimport {\n  createList,\n  changeName,\n  changeShowBoardNameDisplay,\n  onDragEnd,\n} from '../actions'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nclass BoardContainer extends Component {\n  render() {\n    const {\n      handleClick,\n      currentUser,\n      currentBoard,\n      handleBoardNameChange,\n      showBoardNameDisplay,\n      handleHideBoardNameDisplay,\n      handleOnDragEnd,\n      lists,\n    } = this.props\n    let name\n    //let lists\n    //console.log(currentBoard)\n    if (currentBoard && currentBoard[0]) {\n      //name = currentBoard[0].name\n      //lists = currentBoard[0].lists\n\n      console.log('BoardContainer ' + JSON.stringify(currentBoard))\n      return (\n        <Board\n          handleClick={handleClick}\n          //name={name}\n          lists={lists}\n          currentBoard={currentBoard}\n          handleBoardNameChange={handleBoardNameChange}\n          currentUser={currentUser}\n          showBoardNameDisplay={showBoardNameDisplay}\n          handleHideBoardNameDisplay={handleHideBoardNameDisplay}\n          handleOnDragEnd={handleOnDragEnd}\n        />\n      )\n    } else {\n      return (\n        <div className=\"no-board is-size-2 has-text-danger\">\n          no board selected\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: state.currentUser,\n    currentBoard: ownProps.currentBoard,\n    showBoardNameDisplay: state.showBoardNameDisplay,\n    lists: state.activeBoardLists,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClick: e => {\n      dispatch(createList(e))\n    },\n\n    handleBoardNameChange: e => {\n      let componentName = e.target.value\n      e.target.value = ''\n\n      dispatch(changeName(e, componentName, '/changeBoardName'))\n      dispatch(changeShowBoardNameDisplay())\n    },\n\n    handleHideBoardNameDisplay: () => {\n      dispatch(changeShowBoardNameDisplay())\n    },\n\n    handleOnDragEnd: result => {\n      dispatch(onDragEnd(result))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardContainer)\n","import React from 'react'\nimport BoardContainer from '../containers/BoardContainer'\nimport { Redirect } from 'react-router-dom'\n\nconst Show = ({\n  handleLogoutClick,\n  handleCreateBoard,\n  currentUser,\n  handleDeleteBoard,\n  handleActiveBoardSwitch,\n  redirect,\n}) => {\n  console.log('active ' + JSON.stringify(currentUser))\n  let boards = []\n  let boardNames = []\n  let dropdownItems\n  if (currentUser.boards) {\n    boards = currentUser.boards.map(board => {\n      boardNames.push(board.name)\n      return <BoardContainer />\n    })\n    console.log(JSON.stringify(currentUser.boards))\n    dropdownItems = currentUser.boards.map((board, i) => {\n      console.log(i + ' ' + board._id)\n      return (\n        <a\n          className=\"navbar-item has-text-black\"\n          id={board._id}\n          onClick={handleActiveBoardSwitch}\n          key={board._id + '1'}\n        >\n          {board.name ? board.name : `board ${i + 1}`}\n        </a>\n      )\n    })\n  }\n\n  var activeBoard\n  if (currentUser.activeBoard) {\n    activeBoard = currentUser.boards.filter(board => {\n      return board._id === currentUser.activeBoard\n    })\n  }\n\n  activeBoard = <BoardContainer currentBoard={activeBoard} />\n  console.log(currentUser.activeBoard)\n\n  if (redirect === '/login') {\n    return <Redirect to={redirect} />\n  }\n  return (\n    <div className=\"show has-background-white-bis\">\n      <div>\n        <nav\n          className=\"navbar has-background-grey-light\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\">\n            <div className=\"navbar-item is-size-1 is-family-secondary has-text-white\">\n              DJELLO\n            </div>\n          </div>\n          <div className=\"navbar-end\">\n            <div id=\"board-dropdown-board-buttons-container\">\n              <div class=\"dropdown board-dropdown is-hoverable is-right\">\n                <div class=\"dropdown-trigger\">\n                  <button\n                    class=\"button\"\n                    aria-haspopup=\"true\"\n                    aria-controls=\"dropdown-menu4\"\n                  >\n                    <span>Boards</span>\n                    <span class=\"icon is-small\">\n                      <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                    </span>\n                  </button>\n                </div>\n                <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\n                  <div class=\"dropdown-content\">\n                    <div class=\"dropdown-item\">{dropdownItems}</div>\n                  </div>\n                </div>\n              </div>\n              <div id=\"add-delete-board\">\n                <button\n                  // className=\"button is-primary is-light is-large is-outlined create-board-button\"\n                  className=\"button is-primary is-light create-board-button\"\n                  title=\"create new board\"\n                  onClick={handleCreateBoard}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-plus\"></i>\n                  </span>\n                </button>\n                <button\n                  className=\"button is-danger is-light delete-board-button\"\n                  title=\"delete current board\"\n                  onClick={handleDeleteBoard}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-minus-circle\"></i>\n                  </span>\n                  {/* <span>Delete Current Board</span> */}\n                </button>\n              </div>\n            </div>\n            <div className=\"navbar-item\">\n              <div className=\"logout\">\n                <a\n                  className=\"button is-danger is-light\"\n                  onClick={handleLogoutClick}\n                >\n                  Sign Out\n                </a>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"current-board\">{activeBoard}</div>\n    </div>\n  )\n}\n\nexport default Show\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Show from '../components/Show'\nimport {\n  handleLogOut,\n  createBoard,\n  deleteBoard,\n  switchActiveBoard,\n  redirectAfterLogout,\n} from '../actions'\n\nclass ShowContainer extends Component {\n  render() {\n    const {\n      handleLogoutClick,\n      handleCreateBoard,\n      currentUser,\n      handleDeleteBoard,\n      handleActiveBoardSwitch,\n      redirect,\n    } = this.props\n    return (\n      <Show\n        handleLogoutClick={handleLogoutClick}\n        handleCreateBoard={handleCreateBoard}\n        handleDeleteBoard={handleDeleteBoard}\n        currentUser={currentUser}\n        handleActiveBoardSwitch={handleActiveBoardSwitch}\n        redirect={redirect}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    redirect: state.redirect,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogoutClick: e => {\n      dispatch(handleLogOut(e))\n    },\n\n    handleCreateBoard: e => {\n      dispatch(createBoard(e))\n    },\n\n    handleDeleteBoard: e => {\n      dispatch(deleteBoard(e))\n    },\n\n    handleActiveBoardSwitch: e => {\n      dispatch(switchActiveBoard(e))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowContainer)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  return (\n    <div id=\"Home\" className=\"hero is-primary is-bold is-fullheight\">\n      <div className=\"hero-body\">\n        <h1 className=\"is-size-1 has-text-weight-light\">DJELLO</h1>\n        <p>The task manager of tomorrow, today.</p>\n        <div>\n          <Link to=\"/login\">\n            <button className=\"button\">Sign in</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'bulma/css/bulma.css'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport RegisterContainer from './containers/RegisterContainer'\nimport LoginContainer from './containers/LoginContainer'\nimport withAuth from './components/withAuth'\nimport ShowContainer from './containers/ShowContainer'\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App container is-fluid\">\n        <Switch>\n          {/* <Route path=\"/\" exact component={BoardContainer} /> */}\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" exact component={LoginContainer} />\n          <Route path=\"/register\" component={RegisterContainer} />\n          <Route path=\"/:user\" component={withAuth(ShowContainer)} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\n\nexport default function withAuth(ComponentToProtect) {\n    return class extends Component {\n        constructor() {\n            super();\n            this.state = {\n                loading: true,\n                redirect: false\n            };\n        }\n    componentDidMount() {\n        fetch('/checkForCurrentUser')\n            .then(res => {\n                console.log(res.status)\n                if(res.status === 200){\n                    this.setState({\n                        loading:false\n                    })\n                } else {\n                    const error = new Error(res.error);\n                    throw error;    \n                }\n            })\n            .catch(err => {\n                console.error(err);\n                this.setState({ loading: false, redirect: true });\n            });\n    }\n\n        render() {\n            const { loading, redirect } = this.state;\n            if(loading) {\n                return null;\n            } \n            if(redirect) {\n                return <Redirect to=\"/login\" />;\n            }\n            return <ComponentToProtect {...this.props} />\n        }\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistor, store } from './config/configureStore'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}